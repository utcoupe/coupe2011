<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="ax12_8cpp" kind="file">
    <compoundname>ax12.cpp</compoundname>
    <includes refid="motor_control_2build_2core_2wiring_8h" local="yes">wiring.h</includes>
    <includes refid="ax12_8cpp" local="yes">ax12.h</includes>
    <includes local="no">avr/interrupt.h</includes>
    <includedby refid="ax12_8cpp" local="yes">pinceControl/demo_ax12/ax12.cpp</includedby>
    <incdepgraph>
      <node id="2107">
        <label>pinceControl/demo_ax12/ax12.cpp</label>
        <link refid="ax12.cpp"/>
        <childnode refid="2108" relation="include">
        </childnode>
        <childnode refid="2107" relation="include">
        </childnode>
        <childnode refid="2112" relation="include">
        </childnode>
      </node>
      <node id="2112">
        <label>avr/interrupt.h</label>
      </node>
      <node id="2110">
        <label>stdlib.h</label>
      </node>
      <node id="2108">
        <label>wiring.h</label>
        <link refid="motor_control_2build_2core_2wiring_8h"/>
        <childnode refid="2109" relation="include">
        </childnode>
        <childnode refid="2110" relation="include">
        </childnode>
        <childnode refid="2111" relation="include">
        </childnode>
      </node>
      <node id="2109">
        <label>avr/io.h</label>
      </node>
      <node id="2111">
        <label>binary.h</label>
        <link refid="motor_control_2build_2core_2binary_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2113">
        <label>pinceControl/demo_ax12/ax12.cpp</label>
        <link refid="ax12.cpp"/>
        <childnode refid="2113" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ax12_8cpp_1a3345ac4b686485318698ddae96e09648" prot="public" static="no" mutable="no">
        <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
        <definition>byte ax_rx_buffer[AX12_BUFFER_SIZE]</definition>
        <argsstring>[AX12_BUFFER_SIZE]</argsstring>
        <name>ax_rx_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="16" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ax12_8cpp_1adcb8c79071acfeddc1e3ee5ba850f9fd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int status_id</definition>
        <argsstring></argsstring>
        <name>status_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="17" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ax12_8cpp_1a2d214386ded91ac21e0109b5007850e9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int status_error</definition>
        <argsstring></argsstring>
        <name>status_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="18" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ax12_8cpp_1a169aa592b90193637296ec07df7a92dc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int status_data</definition>
        <argsstring></argsstring>
        <name>status_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="19" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ax12_8cpp_1a5ef3917b39ff3d581e47ca82260372f8" prot="public" static="no" mutable="no">
        <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
        <definition>volatile byte ax_rx_Pointer</definition>
        <argsstring></argsstring>
        <name>ax_rx_Pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="22" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ax12_8cpp_1a71702dba1d5fb56b032cd23a36d7b479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setTX</definition>
        <argsstring>()</argsstring>
        <name>setTX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>helper functions to emulate half-duplex </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="25" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1a2a51af3bc74320a24a07c30124b28d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setRX</definition>
        <argsstring>()</argsstring>
        <name>setRX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="30" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1ad9ad6c6e933568d12d293a5c91608ff0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
        <definition>byte ax12writeB</definition>
        <argsstring>(byte data)</argsstring>
        <name>ax12writeB</name>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sends a character out the serial port </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="38" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1ae6e8a8009a9ae0c59f25a496d1cf5a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ISR</definition>
        <argsstring>(USART1_RX_vect)</argsstring>
        <name>ISR</name>
        <param>
          <type>USART1_RX_vect</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>We have a one-way recieve buffer, which is reset after each packet is receieved. A wrap-around buffer does not appear to be fast enough to catch all bytes at 1Mbps. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="46" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1aa1747d06f8e978618fbabb25709e2970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ax12Init</definition>
        <argsstring>(long baud)</argsstring>
        <name>ax12Init</name>
        <param>
          <type>long</type>
          <declname>baud</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>initializes serial1 transmit at baud, 8-N-1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="51" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="51" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1a865cd73244d327d5dc12045beea2e330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ax12SendPacket</definition>
        <argsstring>(byte id, byte datalength, byte instruction, byte *data)</argsstring>
        <name>ax12SendPacket</name>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>datalength</declname>
        </param>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>instruction</declname>
        </param>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>send instruction packet </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="64" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="64" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1a2efd6f1cfb8453bfff9b4e9de4f68898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
        <definition>byte ax12ReadPacket</definition>
        <argsstring>()</argsstring>
        <name>ax12ReadPacket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read status packet /** retorna el código interno de error; 0 = OK </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="82" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="82" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1ab1cb6e4bee6f83b0eae057112cc507ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
        <definition>byte ping</definition>
        <argsstring>(byte id)</argsstring>
        <name>ping</name>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ping </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="138" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1a6291d447cef642376a89fc5af6ae138a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
        <definition>byte reset</definition>
        <argsstring>(byte id)</argsstring>
        <name>reset</name>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reset </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="145" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1a72d0bbf8e2445302752061f04d125246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
        <definition>byte action</definition>
        <argsstring>(byte id)</argsstring>
        <name>action</name>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>action </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="152" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1a015d72f1a8091256fbcd539688d239cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
        <definition>byte readData</definition>
        <argsstring>(byte id, byte regstart, byte reglength)</argsstring>
        <name>readData</name>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>regstart</declname>
        </param>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>reglength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="159" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1a9f29916514368bc9e57339822e4e0898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
        <definition>byte writeData</definition>
        <argsstring>(byte id, byte regstart, byte reglength, int value)</argsstring>
        <name>writeData</name>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>regstart</declname>
        </param>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>reglength</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>write data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="167" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="167" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="ax12_8cpp_1abf02dc1cb1ba4daac686638f9861a608" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
        <definition>byte regWrite</definition>
        <argsstring>(byte id, byte regstart, byte reglength, int value)</argsstring>
        <name>regWrite</name>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>regstart</declname>
        </param>
        <param>
          <type><ref refid="ax12_8h_1a0c8186d9b9b7880309c27230bbb5e69d" kindref="member">byte</ref></type>
          <declname>reglength</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reg write </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" line="176" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp" bodystart="176" bodyend="182"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>ax12.cpp<sp/>-<sp/>arbotiX<sp/>Library<sp/>for<sp/>AX-12<sp/>Servos</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2008,2009<sp/>Michael<sp/>E.<sp/>Ferguson.<sp/><sp/>All<sp/>right<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Modificada<sp/>el<sp/>15/11/09<sp/>por<sp/>Pablo<sp/>Gindel.<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="motor_control_2build_2core_2wiring_8h" kindref="compound">wiring.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>this<sp/>for<sp/>the<sp/>serial<sp/>port<sp/>defines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ax12_8h" kindref="compound">ax12.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/interrupt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Hardware<sp/>Serial<sp/>Level,<sp/>this<sp/>uses<sp/>the<sp/>same<sp/>stuff<sp/>as<sp/>Serial,<sp/>therefore<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>you<sp/>should<sp/>not<sp/>use<sp/>the<sp/>Arduino<sp/>Serial<sp/>library.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="ax12_8cpp_1a3345ac4b686485318698ddae96e09648" refkind="member"><highlight class="normal"><ref refid="com_2carte_2build_2core_2wiring_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/><ref refid="ax12_8cpp_1a3345ac4b686485318698ddae96e09648" kindref="member">ax_rx_buffer</ref>[<ref refid="ax12_8h_1a866556576eb33ef7176a4a327a690435" kindref="member">AX12_BUFFER_SIZE</ref>];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//buffer<sp/>de<sp/>recepción</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="ax12_8h_1adcb8c79071acfeddc1e3ee5ba850f9fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ax12_8cpp_1adcb8c79071acfeddc1e3ee5ba850f9fd" kindref="member">status_id</ref>;</highlight></codeline>
<codeline lineno="18" refid="ax12_8h_1a2d214386ded91ac21e0109b5007850e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ax12_8cpp_1a2d214386ded91ac21e0109b5007850e9" kindref="member">status_error</ref>;</highlight></codeline>
<codeline lineno="19" refid="ax12_8h_1a169aa592b90193637296ec07df7a92dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ax12_8cpp_1a169aa592b90193637296ec07df7a92dc" kindref="member">status_data</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>making<sp/>these<sp/>volatile<sp/>keeps<sp/>the<sp/>compiler<sp/>from<sp/>optimizing<sp/>loops<sp/>of<sp/>available()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="ax12_8cpp_1a5ef3917b39ff3d581e47ca82260372f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/><ref refid="ax12_8cpp_1a5ef3917b39ff3d581e47ca82260372f8" kindref="member">ax_rx_Pointer</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="ax12_8cpp_1a71702dba1d5fb56b032cd23a36d7b479" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ax12_8cpp_1a71702dba1d5fb56b032cd23a36d7b479" kindref="member">setTX</ref>(){</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1abbe843c0521806a4ab2e7cffe44769e2" kindref="member">bitClear</ref>(UCSR1B,<sp/>RXCIE1);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deshabilita<sp/>la<sp/>interrupción<sp/>de<sp/>recepción<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1abbe843c0521806a4ab2e7cffe44769e2" kindref="member">bitClear</ref>(UCSR1B,<sp/>RXEN1);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deshabilila<sp/>la<sp/>recepción</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a6a8195c0e930f86c6af03ba6af8b41dd" kindref="member">bitSet</ref>(UCSR1B,<sp/>TXEN1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>habilita<sp/>la<sp/>trasmisión</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30" refid="ax12_8cpp_1a2a51af3bc74320a24a07c30124b28d6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ax12_8cpp_1a2a51af3bc74320a24a07c30124b28d6e" kindref="member">setRX</ref>(){</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1abbe843c0521806a4ab2e7cffe44769e2" kindref="member">bitClear</ref>(UCSR1B,<sp/>TXEN1);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a6a8195c0e930f86c6af03ba6af8b41dd" kindref="member">bitSet</ref>(UCSR1B,<sp/>RXEN1);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a6a8195c0e930f86c6af03ba6af8b41dd" kindref="member">bitSet</ref>(UCSR1B,<sp/>RXCIE1);<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax12_8cpp_1a5ef3917b39ff3d581e47ca82260372f8" kindref="member">ax_rx_Pointer</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>resetea<sp/>el<sp/>puntero<sp/>del<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="ax12_8cpp_1ad9ad6c6e933568d12d293a5c91608ff0" refkind="member"><highlight class="normal"><ref refid="com_2carte_2build_2core_2wiring_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/><ref refid="ax12_8cpp_1ad9ad6c6e933568d12d293a5c91608ff0" kindref="member">ax12writeB</ref>(<ref refid="com_2carte_2build_2core_2wiring_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/>data){</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bit_is_clear(UCSR1A,<sp/>UDRE1));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>espera<sp/>que<sp/>el<sp/>micro<sp/>estÈ<sp/>pronto<sp/>para<sp/>trasmitir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>UDR1<sp/>=<sp/>data;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>escribe<sp/>el<sp/>byte<sp/>a<sp/>trasmitir</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="ax12_8cpp_1ae6e8a8009a9ae0c59f25a496d1cf5a84" refkind="member"><highlight class="normal"><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a5686c229bdef50123688ab6cb1404230" kindref="member">ISR</ref>(USART1_RX_vect){<sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax12_8cpp_1a3345ac4b686485318698ddae96e09648" kindref="member">ax_rx_buffer</ref>[(<ref refid="ax12_8cpp_1a5ef3917b39ff3d581e47ca82260372f8" kindref="member">ax_rx_Pointer</ref>++)]<sp/>=<sp/>UDR1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>esta<sp/>es<sp/>la<sp/>rutina<sp/>de<sp/>interrupción<sp/>de<sp/>recepción</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lo<sp/>que<sp/>hace<sp/>es<sp/>meter<sp/>el<sp/>byte<sp/>recibido<sp/>en<sp/>el<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="ax12_8h_1aa1747d06f8e978618fbabb25709e2970" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ax12_8cpp_1aa1747d06f8e978618fbabb25709e2970" kindref="member">ax12Init</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>baud){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>UBRR1H<sp/>=<sp/>((F_CPU<sp/>/<sp/>16<sp/>+<sp/>baud<sp/>/<sp/>2)<sp/>/<sp/>baud<sp/>-<sp/>1)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>UBRR1L<sp/>=<sp/>((F_CPU<sp/>/<sp/>16<sp/>+<sp/>baud<sp/>/<sp/>2)<sp/>/<sp/>baud<sp/>-<sp/>1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setea<sp/>la<sp/>velocidad<sp/>del<sp/>USART</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax12_8cpp_1a5ef3917b39ff3d581e47ca82260372f8" kindref="member">ax_rx_Pointer</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>rx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax12_8cpp_1a2a51af3bc74320a24a07c30124b28d6e" kindref="member">setRX</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>Packet<sp/>Level</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="ax12_8cpp_1a865cd73244d327d5dc12045beea2e330" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ax12_8cpp_1a865cd73244d327d5dc12045beea2e330" kindref="member">ax12SendPacket</ref><sp/>(<ref refid="com_2carte_2build_2core_2wiring_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/>datalength,<sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/>instruction,<sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/>*data){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/>checksum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax12_8cpp_1a71702dba1d5fb56b032cd23a36d7b479" kindref="member">setTX</ref>();<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax12_8cpp_1ad9ad6c6e933568d12d293a5c91608ff0" kindref="member">ax12writeB</ref>(0xFF);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax12_8cpp_1ad9ad6c6e933568d12d293a5c91608ff0" kindref="member">ax12writeB</ref>(0xFF);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>checksum<sp/>+=<sp/><ref refid="ax12_8cpp_1ad9ad6c6e933568d12d293a5c91608ff0" kindref="member">ax12writeB</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>checksum<sp/>+=<sp/><ref refid="ax12_8cpp_1ad9ad6c6e933568d12d293a5c91608ff0" kindref="member">ax12writeB</ref>(datalength<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>checksum<sp/>+=<sp/><ref refid="ax12_8cpp_1ad9ad6c6e933568d12d293a5c91608ff0" kindref="member">ax12writeB</ref>(instruction);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="com_2carte_2build_2core_2wiring_8h_1ab8ef12fab634c171394422d0ee8baf94" kindref="member">byte</ref><sp/>f=0;<sp/>f&lt;datalength;<sp/>f++)<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>=<sp/>parámetros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>checksum<sp/>+=<sp/><ref refid="ax12_8cpp_1ad9ad6c6e933568d12d293a5c91608ff0" kindref="member">ax12writeB</ref>(data[f]);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>checksum<sp/>=<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax12_8cpp_1ad9ad6c6e933568d12d293a5c91608ff0" kindref="member">ax12writeB</ref>(~checksum);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ax12_8cpp_1a2a51af3bc74320a24a07c30124b28d6e" kindref="member">setRX</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="ax12_8cpp_1a2efd6f1cfb8453bfff9b4e9de4f68898" refkind="member"></codeline>
<codeline lineno="138" refid="ax12_8h_1ab1cb6e4bee6f83b0eae057112cc507ae" refkind="member"></codeline>
<codeline lineno="145" refid="ax12_8h_1a6291d447cef642376a89fc5af6ae138a" refkind="member"></codeline>
<codeline lineno="152" refid="ax12_8cpp_1a72d0bbf8e2445302752061f04d125246" refkind="member"></codeline>
<codeline lineno="159" refid="ax12_8h_1a015d72f1a8091256fbcd539688d239cc" refkind="member"></codeline>
<codeline lineno="167" refid="ax12_8h_1a9f29916514368bc9e57339822e4e0898" refkind="member"></codeline>
<codeline lineno="176" refid="ax12_8cpp_1abf02dc1cb1ba4daac686638f9861a608" refkind="member"></codeline>
    </programlisting>
    <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/pinceControl/demo_ax12/ax12.cpp"/>
  </compounddef>
</doxygen>
