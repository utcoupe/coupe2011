<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="motor_control_2build_2core_2_w_string_8cpp" kind="file">
    <compoundname>WString.cpp</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="motor_control_2build_2core_2_w_string_8cpp" local="yes">WProgram.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">avr/interrupt.h</includes>
    <includes refid="motor_control_2build_2core_2wiring_8h" local="yes">wiring.h</includes>
    <includes refid="motor_control_2build_2core_2_w_string_8h" local="yes">WString.h</includes>
    <includedby refid="motor_control_2build_2core_2_w_string_8cpp" local="yes">motorControl/build/core/WString.cpp</includedby>
    <incdepgraph>
      <node id="1829">
        <label>motorControl/build/core/WString.cpp</label>
        <link refid="motorControl/build/core/WString.cpp"/>
        <childnode refid="1830" relation="include">
        </childnode>
        <childnode refid="1829" relation="include">
        </childnode>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1832" relation="include">
        </childnode>
        <childnode refid="1833" relation="include">
        </childnode>
        <childnode refid="1834" relation="include">
        </childnode>
        <childnode refid="1837" relation="include">
        </childnode>
      </node>
      <node id="1833">
        <label>avr/interrupt.h</label>
      </node>
      <node id="1830">
        <label>stdlib.h</label>
      </node>
      <node id="1834">
        <label>wiring.h</label>
        <link refid="motor_control_2build_2core_2wiring_8h"/>
        <childnode refid="1835" relation="include">
        </childnode>
        <childnode refid="1830" relation="include">
        </childnode>
        <childnode refid="1836" relation="include">
        </childnode>
      </node>
      <node id="1835">
        <label>avr/io.h</label>
      </node>
      <node id="1831">
        <label>string.h</label>
      </node>
      <node id="1837">
        <label>WString.h</label>
        <link refid="motor_control_2build_2core_2_w_string_8h"/>
        <childnode refid="1830" relation="include">
        </childnode>
        <childnode refid="1831" relation="include">
        </childnode>
        <childnode refid="1838" relation="include">
        </childnode>
      </node>
      <node id="1832">
        <label>math.h</label>
      </node>
      <node id="1836">
        <label>binary.h</label>
        <link refid="motor_control_2build_2core_2binary_8h"/>
      </node>
      <node id="1838">
        <label>ctype.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1839">
        <label>motorControl/build/core/WString.cpp</label>
        <link refid="motorControl/build/core/WString.cpp"/>
        <childnode refid="1839" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>WString.cpp<sp/>-<sp/>String<sp/>library<sp/>for<sp/>Wiring<sp/>&amp;<sp/>Arduino</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2009-10<sp/>Hernando<sp/>Barragan.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;WProgram.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="motor_control_2build_2core_2_w_string_8h" kindref="compound">WString.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="class_string_1a7f902d8fff17edbac1a65dd809826242" kindref="member">String::String</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value<sp/>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>value<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="class_string_1aa132e2b548ce6cbc48dc2761cab5c944" kindref="member">getBuffer</ref>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>=<sp/>strlen(<sp/>value<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="class_string_1a7f902d8fff17edbac1a65dd809826242" kindref="member">String::String</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;value<sp/>)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="class_string_1aa132e2b548ce6cbc48dc2761cab5c944" kindref="member">getBuffer</ref>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>=<sp/>value.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>value.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="class_string_1a7f902d8fff17edbac1a65dd809826242" kindref="member">String::String</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value<sp/>)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="class_string_1aa132e2b548ce6cbc48dc2761cab5c944" kindref="member">getBuffer</ref>(1);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>!=<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[0]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="class_string_1a7f902d8fff17edbac1a65dd809826242" kindref="member">String::String</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="class_string_1aa132e2b548ce6cbc48dc2761cab5c944" kindref="member">getBuffer</ref>(1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[0]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="class_string_1a7f902d8fff17edbac1a65dd809826242" kindref="member">String::String</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[33];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>itoa((</highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)value,<sp/>buf,<sp/>base);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="class_string_1aa132e2b548ce6cbc48dc2761cab5c944" kindref="member">getBuffer</ref>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>=<sp/>strlen(buf)<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="class_string_1a7f902d8fff17edbac1a65dd809826242" kindref="member">String::String</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[33];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>ultoa((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)value,<sp/>buf,<sp/>base);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="class_string_1aa132e2b548ce6cbc48dc2761cab5c944" kindref="member">getBuffer</ref>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>=<sp/>strlen(buf)<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="class_string_1a7f902d8fff17edbac1a65dd809826242" kindref="member">String::String</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[33];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>ltoa(value,<sp/>buf,<sp/>base);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="class_string_1aa132e2b548ce6cbc48dc2761cab5c944" kindref="member">getBuffer</ref>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>=<sp/>strlen(buf)<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="class_string_1a7f902d8fff17edbac1a65dd809826242" kindref="member">String::String</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[33];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>ultoa(value,<sp/>buf,<sp/>10);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="class_string_1aa132e2b548ce6cbc48dc2761cab5c944" kindref="member">getBuffer</ref>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>=<sp/>strlen(buf)<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>!=<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>buf<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_string_1acead06863849178bb7feb0dae0c5d595" kindref="member">String::charAt</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="98"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_string_1a1fcf18cc37ee5df15e78e1b0eba1e9da" kindref="member">operator[]</ref>(<sp/>loc<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_string_1a5f276a61766d25a1c03e74905261ad99" kindref="member">String::setCharAt</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>aChar<sp/>)<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>&gt;<sp/>loc)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[loc]<sp/>=<sp/>aChar;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1a1ed648fc6f54ab9e99fae08991675c77" kindref="member">String::compareTo</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="111"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>s2.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;<sp/><ref refid="class_string_1a458fe8623cb3447270e0c9e599bf8149" kindref="member">String::concat</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2<sp/>)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>+=<sp/>s2;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;<sp/><ref refid="class_string_1a948f0764e4c1bc9b0229b588475c12b8" kindref="member">String::operator=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;rhs<sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;rhs<sp/>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>rhs.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>&gt;<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_string_1aa132e2b548ce6cbc48dc2761cab5c944" kindref="member">getBuffer</ref>(<sp/>rhs.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>!=<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>=<sp/>rhs.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>rhs.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//const<sp/>String<sp/>&amp;<sp/>String::operator+=(<sp/>const<sp/>char<sp/>aChar<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(<sp/>_length<sp/>==<sp/>_capacity<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>doubleBuffer();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>_buffer[<sp/>_length++<sp/>]<sp/>=<sp/>aChar;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>_buffer[<sp/>_length<sp/>]<sp/>=<sp/>&apos;\0&apos;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>return<sp/>*this;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;<sp/><ref refid="class_string_1a942664cd417e945729bd7e84b7ee5551" kindref="member">String::operator+=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;other<sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>+=<sp/>other.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>&gt;<sp/><ref refid="class_string_1ae525e8ac0d02eaedd3b6e287df4ddcee" kindref="member">_capacity</ref><sp/>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*temp<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)realloc(<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>temp<sp/>!=<sp/>NULL<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_string_1ae525e8ac0d02eaedd3b6e287df4ddcee" kindref="member">_capacity</ref><sp/>=<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>-=<sp/>other.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>strcat(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>other.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1a1f2e5754b50d71ff8214b4e3a2eb5af2" kindref="member">String::operator==</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="168"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>==<sp/>rhs.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>&amp;&amp;<sp/>strcmp(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>rhs.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1a36db6357dafed08267484852ddaafc69" kindref="member">String::operator!=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="173"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>!=<sp/>rhs.<ref refid="class_string_1a61d8c8330af43b5f6ccbf11a92457b44" kindref="member">length</ref>()<sp/>||<sp/>strcmp(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>rhs.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>)<sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1a47b8b84dc27e295c05b8b1f93a6605b2" kindref="member">String::operator&lt;</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="178"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>rhs.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>)<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1a239f2d617dcfa752a1cc83b2615cc7b7" kindref="member">String::operator&gt;</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="183"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>rhs.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1a0cac0e8a22a9e97d6a11e0b17f83e802" kindref="member">String::operator&lt;=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="188"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>rhs.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>)<sp/>&lt;=<sp/>0;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1aeca39c0d1c675a9ccf831814fecdeba7" kindref="member">String::operator&gt;=</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;<sp/>rhs<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="193"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>rhs.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;<sp/><ref refid="class_string_1a1fcf18cc37ee5df15e78e1b0eba1e9da" kindref="member">String::operator[]</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="motor_control_8cpp_1a2a94042027892d5d3ad23bac2d7d8207" kindref="member">index</ref><sp/>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dummy_writable_char;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>||<sp/>!<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>dummy_writable_char<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dummy_writable_char;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>index<sp/>];</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_string_1a1fcf18cc37ee5df15e78e1b0eba1e9da" kindref="member">String::operator[]</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="208"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>check<sp/>for<sp/>valid<sp/>index,<sp/>to<sp/>do<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>index<sp/>];</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_string_1a4f2b8d633c6f91309ebd315199a2d2b8" kindref="member">String::endsWith</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="214"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>&lt;<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(<sp/>&amp;<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>-<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref>],<sp/>s2.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_string_1a0f25dc8c00c27db4eb0deb713cbf5152" kindref="member">String::equals</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="222"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>==<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>&amp;&amp;<sp/>strcmp(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,s2.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_string_1ae2cd256105577f22724d1eaff0431aaa" kindref="member">String::equalsIgnoreCase</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="227"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;s2<sp/>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>!=<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(<ref refid="class_string_1a17f872d6422e11d2b9c3902f800dc19c" kindref="member">toLowerCase</ref>().<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>s2.<ref refid="class_string_1a17f872d6422e11d2b9c3902f800dc19c" kindref="member">toLowerCase</ref>().<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="class_string" kindref="compound">String</ref><sp/><ref refid="class_string_1aa3777be2f9b9dd6480a6ed23175005f5" kindref="member">String::replace</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>findChar,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>replaceChar<sp/>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>==<sp/>NULL<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>theReturn<sp/>=<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp<sp/>=<sp/>theReturn.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(temp<sp/>=<sp/>strchr(<sp/>temp,<sp/>findChar<sp/>))<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>*temp<sp/>=<sp/>replaceChar;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theReturn;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><ref refid="class_string" kindref="compound">String</ref><sp/><ref refid="class_string_1aa3777be2f9b9dd6480a6ed23175005f5" kindref="member">String::replace</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref>&amp;<sp/>match,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref>&amp;<sp/>replace<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>==<sp/>NULL<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>temp<sp/>=<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>newString;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>loc;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(loc<sp/>=<sp/>temp.<ref refid="class_string_1a798dc000292a549eca982a3a5e2de54a" kindref="member">indexOf</ref>(<sp/>match<sp/>))<sp/>!=<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>newString<sp/>+=<sp/>temp.<ref refid="class_string_1ad27c108b34b07c6785e194c2d968bb1c" kindref="member">substring</ref>(<sp/>0,<sp/>loc<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>newString<sp/>+=<sp/>replace;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>temp.<ref refid="class_string_1ad27c108b34b07c6785e194c2d968bb1c" kindref="member">substring</ref>(<sp/>loc<sp/>+<sp/>match.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>newString<sp/>+=<sp/>temp;<sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newString;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1a798dc000292a549eca982a3a5e2de54a" kindref="member">String::indexOf</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="264"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_string_1a798dc000292a549eca982a3a5e2de54a" kindref="member">indexOf</ref>(<sp/>temp,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1a798dc000292a549eca982a3a5e2de54a" kindref="member">String::indexOf</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fromIndex<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="269"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fromIndex<sp/>&gt;=<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp<sp/>=<sp/>strchr(<sp/>&amp;<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[fromIndex],<sp/>ch<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>temp<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp<sp/>-<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1a798dc000292a549eca982a3a5e2de54a" kindref="member">String::indexOf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="281"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_string_1a798dc000292a549eca982a3a5e2de54a" kindref="member">indexOf</ref>(<sp/>s2,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1a798dc000292a549eca982a3a5e2de54a" kindref="member">String::indexOf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fromIndex<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="286"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fromIndex<sp/>&gt;=<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*theFind<sp/>=<sp/>strstr(<sp/>&amp;<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>fromIndex<sp/>],<sp/>s2.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>theFind<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theFind<sp/>-<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>;<sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>subtraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1ae3dbedf8dc518d947c91f484b6d78a6f" kindref="member">String::lastIndexOf</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>theChar<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="299"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_string_1ae3dbedf8dc518d947c91f484b6d78a6f" kindref="member">lastIndexOf</ref>(<sp/>theChar,<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>-<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1ae3dbedf8dc518d947c91f484b6d78a6f" kindref="member">String::lastIndexOf</ref>(<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fromIndex<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="304"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fromIndex<sp/>&gt;=<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tempchar<sp/>=<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[fromIndex<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[fromIndex<sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp<sp/>=<sp/>strrchr(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>ch<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[fromIndex<sp/>+<sp/>1]<sp/>=<sp/>tempchar;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>temp<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp<sp/>-<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1ae3dbedf8dc518d947c91f484b6d78a6f" kindref="member">String::lastIndexOf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="320"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_string_1ae3dbedf8dc518d947c91f484b6d78a6f" kindref="member">lastIndexOf</ref>(<sp/>s2,<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>-<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string_1ae3dbedf8dc518d947c91f484b6d78a6f" kindref="member">String::lastIndexOf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fromIndex<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="325"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>empty<sp/>strings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>==<sp/>0<sp/>||<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>-<sp/>1<sp/>&gt;<sp/>fromIndex<sp/>||<sp/>fromIndex<sp/>&gt;=<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>matching<sp/>first<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>s2[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>fromIndex;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--<sp/>)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>i<sp/>]<sp/>==<sp/>temp<sp/>&amp;&amp;<sp/>(*this).substring(<sp/>i,<sp/>i<sp/>+<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>).equals(<sp/>s2<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_string_1a151339707b7370176a46b9edef5c3bdc" kindref="member">String::startsWith</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="342"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>&lt;<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_string_1a151339707b7370176a46b9edef5c3bdc" kindref="member">startsWith</ref>(<sp/>s2,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="class_string_1a151339707b7370176a46b9edef5c3bdc" kindref="member">String::startsWith</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>&amp;s2,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="350"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>offset<sp/>&gt;<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>-<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strncmp(<sp/>&amp;<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[offset],<sp/>s2.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>s2.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><ref refid="class_string" kindref="compound">String</ref><sp/><ref refid="class_string_1ad27c108b34b07c6785e194c2d968bb1c" kindref="member">String::substring</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="358"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_string_1ad27c108b34b07c6785e194c2d968bb1c" kindref="member">substring</ref>(<sp/>left,<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><ref refid="class_string" kindref="compound">String</ref><sp/><ref refid="class_string_1ad27c108b34b07c6785e194c2d968bb1c" kindref="member">String::substring</ref>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="363"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>left<sp/>&gt;<sp/>right<sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/>right;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>right<sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>left<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>right<sp/>&gt;<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>right<sp/>=<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp<sp/>=<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>right<sp/>];<sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>replaced<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>right<sp/>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>outPut<sp/>=<sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>+<sp/>left<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>arithmetic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>right<sp/>]<sp/>=<sp/>temp;<sp/><sp/></highlight><highlight class="comment">//restore<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outPut;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><ref refid="class_string" kindref="compound">String</ref><sp/><ref refid="class_string_1a17f872d6422e11d2b9c3902f800dc19c" kindref="member">String::toLowerCase</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="384"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>temp<sp/>=<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>temp.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>i<sp/>]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)tolower(<sp/>temp.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><ref refid="class_string" kindref="compound">String</ref><sp/><ref refid="class_string_1a1be059135eecd087baca2174ed403516" kindref="member">String::toUpperCase</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="393"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>temp<sp/>=<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>temp.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>i<sp/>]<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)toupper(<sp/>temp.<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[<sp/>i<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><ref refid="class_string" kindref="compound">String</ref><sp/><ref refid="class_string_1ad3853992f01ae00f2e6ed2d4eda85fb6" kindref="member">String::trim</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="402"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref><sp/>==<sp/>NULL<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><ref refid="class_string" kindref="compound">String</ref><sp/>temp<sp/>=<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!isspace(<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[i])<sp/>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>temp.<ref refid="class_string_1ad4ffdf5de1868afeae32a4b85cc20306" kindref="member">_length</ref><sp/>-<sp/>1;<sp/>j<sp/>&gt;<sp/>i;<sp/>j--<sp/>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!isspace(<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>[j])<sp/>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp.<ref refid="class_string_1ad27c108b34b07c6785e194c2d968bb1c" kindref="member">substring</ref>(<sp/>i,<sp/>j<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="420"><highlight class="normal">}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_string_1a87ed5d0774c614c9811b9d6e3e5d36d4" kindref="member">String::getBytes</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufsize)</highlight></codeline>
<codeline lineno="423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bufsize<sp/>||<sp/>!buf)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>bufsize<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>_length)<sp/>len<sp/>=<sp/>_length;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>strncpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buf,<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>buf[len]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_string_1add11f6222fa98444c9af6baf9d0eb874" kindref="member">String::toCharArray</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufsize)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bufsize<sp/>||<sp/>!buf)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>bufsize<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>_length)<sp/>len<sp/>=<sp/>_length;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>strncpy(buf,<sp/><ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>buf[len]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="438"><highlight class="normal">}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="class_string_1a77e821a32cc42cc7875331685bb5abd3" kindref="member">String::toInt</ref>()<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>atol(<ref refid="class_string_1a34c18617e298d206e16baa20a0ffa1be" kindref="member">_buffer</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WString.cpp"/>
  </compounddef>
</doxygen>
