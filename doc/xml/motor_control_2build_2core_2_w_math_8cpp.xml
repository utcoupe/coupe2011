<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="motor_control_2build_2core_2_w_math_8cpp" kind="file">
    <compoundname>WMath.cpp</compoundname>
    <includes local="yes">stdlib.h</includes>
    <incdepgraph>
      <node id="1789">
        <label>stdlib.h</label>
      </node>
      <node id="1788">
        <label>motorControl/build/core/WMath.cpp</label>
        <link refid="motorControl/build/core/WMath.cpp"/>
        <childnode refid="1789" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="motor_control_2build_2core_2_w_math_8cpp_1a7168ac68f2e0af58e9581a9360845061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void randomSeed</definition>
        <argsstring>(unsigned int seed)</argsstring>
        <name>randomSeed</name>
        <param>
          <type>unsigned int</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" line="31" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="motor_control_2build_2core_2_w_math_8cpp_1aa3615b8aa052e0217c79f0b6919546bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long random</definition>
        <argsstring>(long howbig)</argsstring>
        <name>random</name>
        <param>
          <type>long</type>
          <declname>howbig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" line="38" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="motor_control_2build_2core_2_w_math_8cpp_1ae674ea113a2a717d0da96f9d38742072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long random</definition>
        <argsstring>(long howsmall, long howbig)</argsstring>
        <name>random</name>
        <param>
          <type>long</type>
          <declname>howsmall</declname>
        </param>
        <param>
          <type>long</type>
          <declname>howbig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" line="46" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" bodystart="45" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="motor_control_2build_2core_2_w_math_8cpp_1aada2d75bc8a8c6eb845bd940eadfa3fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long map</definition>
        <argsstring>(long x, long in_min, long in_max, long out_min, long out_max)</argsstring>
        <name>map</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>in_min</declname>
        </param>
        <param>
          <type>long</type>
          <declname>in_max</declname>
        </param>
        <param>
          <type>long</type>
          <declname>out_min</declname>
        </param>
        <param>
          <type>long</type>
          <declname>out_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" line="55" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="motor_control_2build_2core_2_w_math_8cpp_1a989f42e2ac4fb3b5efa531f2b885fee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int makeWord</definition>
        <argsstring>(unsigned int w)</argsstring>
        <name>makeWord</name>
        <param>
          <type>unsigned int</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" line="59" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="motor_control_2build_2core_2_w_math_8cpp_1a9088409a23820cf38f9f16b3e837b61a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int makeWord</definition>
        <argsstring>(unsigned char h, unsigned char l)</argsstring>
        <name>makeWord</name>
        <param>
          <type>unsigned char</type>
          <declname>h</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" line="60" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp" bodystart="60" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>jde;<sp/>c-basic-offset:<sp/>2;<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Part<sp/>of<sp/>the<sp/>Wiring<sp/>project<sp/>-<sp/>http://wiring.org.co</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Copyright<sp/>(c)<sp/>2004-06<sp/>Hernando<sp/>Barragan</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>Modified<sp/>13<sp/>August<sp/>2006,<sp/>David<sp/>A.<sp/>Mellis<sp/>for<sp/>Arduino<sp/>-<sp/>http://www.arduino.cc/</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>Public<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/>$Id$</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="motor_control_2build_2core_2_w_math_8cpp_1a7168ac68f2e0af58e9581a9360845061" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_w_math_8cpp_1a7168ac68f2e0af58e9581a9360845061" kindref="member">randomSeed</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seed)</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seed<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>srandom(seed);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="motor_control_2build_2core_2_w_math_8cpp_1aa3615b8aa052e0217c79f0b6919546bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_w_math_8cpp_1aa3615b8aa052e0217c79f0b6919546bf" kindref="member">random</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>howbig)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(howbig<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_w_math_8cpp_1aa3615b8aa052e0217c79f0b6919546bf" kindref="member">random</ref>()<sp/>%<sp/>howbig;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="motor_control_2build_2core_2_w_math_8cpp_1ae674ea113a2a717d0da96f9d38742072" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_w_math_8cpp_1aa3615b8aa052e0217c79f0b6919546bf" kindref="member">random</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>howsmall,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>howbig)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(howsmall<sp/>&gt;=<sp/>howbig)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>howsmall;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>howbig<sp/>-<sp/>howsmall;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_w_math_8cpp_1aa3615b8aa052e0217c79f0b6919546bf" kindref="member">random</ref>(diff)<sp/>+<sp/>howsmall;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="motor_control_2build_2core_2_w_math_8cpp_1aada2d75bc8a8c6eb845bd940eadfa3fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_w_math_8cpp_1aada2d75bc8a8c6eb845bd940eadfa3fd" kindref="member">map</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>in_min,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>in_max,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>out_min,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>out_max)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x<sp/>-<sp/>in_min)<sp/>*<sp/>(out_max<sp/>-<sp/>out_min)<sp/>/<sp/>(in_max<sp/>-<sp/>in_min)<sp/>+<sp/>out_min;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="motor_control_2build_2core_2_w_math_8cpp_1a989f42e2ac4fb3b5efa531f2b885fee8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_w_math_8cpp_1a989f42e2ac4fb3b5efa531f2b885fee8" kindref="member">makeWord</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w;<sp/>}</highlight></codeline>
<codeline lineno="60" refid="motor_control_2build_2core_2_w_math_8cpp_1a9088409a23820cf38f9f16b3e837b61a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_w_math_8cpp_1a989f42e2ac4fb3b5efa531f2b885fee8" kindref="member">makeWord</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>l)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(h<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>l;<sp/>}</highlight></codeline>
    </programlisting>
    <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/motorControl/build/core/WMath.cpp"/>
  </compounddef>
</doxygen>
