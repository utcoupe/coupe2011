<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="trajectory_8c" kind="file">
    <compoundname>trajectory.c</compoundname>
    <includes refid="_a_l_types_8h" local="yes">ALTypes.h</includes>
    <includes local="yes">math.h</includes>
    <includes refid="config_8h" local="yes">config.h</includes>
    <includes refid="asserv_orientation_8h" local="yes">asservOrientation.h</includes>
    <includes refid="asserv_distance_8h" local="yes">asservDistance.h</includes>
    <includes refid="trajectory_8h" local="yes">trajectory.h</includes>
    <incdepgraph>
      <node id="1276">
        <label>asservDistance.h</label>
        <link refid="asserv_distance_8h"/>
      </node>
      <node id="1270">
        <label>asserv2010/trajectory.c</label>
        <link refid="trajectory.c"/>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1272" relation="include">
        </childnode>
        <childnode refid="1273" relation="include">
        </childnode>
        <childnode refid="1275" relation="include">
        </childnode>
        <childnode refid="1276" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
      </node>
      <node id="1274">
        <label>trajectory.h</label>
        <link refid="trajectory_8h"/>
        <childnode refid="1271" relation="include">
        </childnode>
      </node>
      <node id="1272">
        <label>math.h</label>
      </node>
      <node id="1271">
        <label>ALTypes.h</label>
        <link refid="_a_l_types_8h"/>
      </node>
      <node id="1273">
        <label>config.h</label>
        <link refid="config_8h"/>
        <childnode refid="1271" relation="include">
        </childnode>
        <childnode refid="1274" relation="include">
        </childnode>
      </node>
      <node id="1275">
        <label>asservOrientation.h</label>
        <link refid="asserv_orientation_8h"/>
        <childnode refid="1274" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="trajectory_8c_1a8c17299ac6ec17cca857281d4c28d679" prot="public" static="no">
        <name>ROTATION_HACK</name>
        <initializer>-40000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c" line="8" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="trajectory_8c_1a8bb502c0b7288d89f1b34118acd79ef3" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float gRotationTheorique</definition>
        <argsstring></argsstring>
        <name>gRotationTheorique</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c" line="10" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="trajectory_8c_1a86b34ef046b15853e51654f3579bfad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_a_l_types_8h_1a3b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
        <definition>uInt16 insidePoint</definition>
        <argsstring>(point pA)</argsstring>
        <name>insidePoint</name>
        <param>
          <type><ref refid="structpoint" kindref="compound">point</ref></type>
          <declname>pA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c" line="14" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c" bodystart="13" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="trajectory_8c_1afefab840827700eeda0e24c711916d14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_a_l_types_8h_1a3b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
        <definition>uInt16 orientationHack</definition>
        <argsstring>(void)</argsstring>
        <name>orientationHack</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c" line="26" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c" bodystart="25" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="trajectory_8c_1ac845a572b6a2f20dba1053ee6366e1a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nextTargetPointManagement</definition>
        <argsstring>(float pEcart_d, uInt16 pPlanificationAsked)</argsstring>
        <name>nextTargetPointManagement</name>
        <param>
          <type>float</type>
          <declname>pEcart_d</declname>
        </param>
        <param>
          <type><ref refid="_a_l_types_8h_1a3b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref></type>
          <declname>pPlanificationAsked</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c" line="42" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c" bodystart="41" bodyend="153"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_a_l_types_8h" kindref="compound">ALTypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="config_8h" kindref="compound">config.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="asserv_orientation_8h" kindref="compound">asservOrientation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="asserv_distance_8h" kindref="compound">asservDistance.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trajectory_8h" kindref="compound">trajectory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="trajectory_8c_1a8c17299ac6ec17cca857281d4c28d679" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROTATION_HACK<sp/>-40000</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="trajectory_8c_1a8bb502c0b7288d89f1b34118acd79ef3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="asserv_8c_1a8bb502c0b7288d89f1b34118acd79ef3" kindref="member">gRotationTheorique</ref>=0;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="trajectory_8h_1a86b34ef046b15853e51654f3579bfad0" refkind="member"><highlight class="normal"><ref refid="_a_l_types_8h_1a3b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/><ref refid="trajectory_8c_1a86b34ef046b15853e51654f3579bfad0" kindref="member">insidePoint</ref>(<ref refid="structpoint" kindref="compound">point</ref><sp/>pA)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pA.<ref refid="structpoint_1a8293fd2de3ce739deb6d53691fd21fcf" kindref="member">x</ref><sp/>&lt;<sp/><ref refid="trajectory_8h_1a4734ac4c9414c31e4772483473aa6ea1" kindref="member">DIMENSION_X</ref>*<ref refid="config_8h_1acacca3b69daf2bb5962520d6c2ec747e" kindref="member">COUNT_MILLIMETER</ref>)<sp/>&amp;&amp;<sp/>(pA.<ref refid="structpoint_1a616ad85a2096d1566f5971666bbc3b3f" kindref="member">y</ref><sp/>&lt;<sp/><ref refid="trajectory_8h_1ab08b2e807dfc5aea0fe098f99c9f3f44" kindref="member">DIMENSION_Y</ref>*COUNT_MILLIMETER))</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pA.<ref refid="structpoint_1a8293fd2de3ce739deb6d53691fd21fcf" kindref="member">x</ref><sp/>&gt;=<sp/>0)<sp/>&amp;&amp;<sp/>(pA.<ref refid="structpoint_1a616ad85a2096d1566f5971666bbc3b3f" kindref="member">y</ref><sp/>&gt;=<sp/>0))</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="trajectory_8h_1afefab840827700eeda0e24c711916d14" refkind="member"><highlight class="normal"><ref refid="_a_l_types_8h_1a3b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/><ref refid="trajectory_8c_1afefab840827700eeda0e24c711916d14" kindref="member">orientationHack</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="structrobot" kindref="compound">robot</ref><sp/>*<sp/>Robot;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>RECUPERATION<sp/>DES<sp/>PARAMETRE<sp/>DU<sp/>ROBOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>Robot<sp/>=<sp/><ref refid="config_8c_1a1620e709da932be9c3f2fff78ecf50e3" kindref="member">getRobot</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>.<ref refid="structpoint_1a8293fd2de3ce739deb6d53691fd21fcf" kindref="member">x</ref><sp/>==<sp/><ref refid="trajectory_8c_1a8c17299ac6ec17cca857281d4c28d679" kindref="member">ROTATION_HACK</ref>)<sp/>&amp;&amp;<sp/>(Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>.<ref refid="structpoint_1a616ad85a2096d1566f5971666bbc3b3f" kindref="member">y</ref><sp/>==<sp/><ref refid="trajectory_8c_1a8c17299ac6ec17cca857281d4c28d679" kindref="member">ROTATION_HACK</ref>))</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">}<sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="trajectory_8h_1ac845a572b6a2f20dba1053ee6366e1a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trajectory_8c_1ac845a572b6a2f20dba1053ee6366e1a6" kindref="member">nextTargetPointManagement</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pEcart_d,<sp/><ref refid="_a_l_types_8h_1a3b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>pPlanificationAsked)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rotationDeBase;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="structrobot" kindref="compound">robot</ref><sp/>*<sp/>Robot;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ecart_d;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_a_l_types_8h_1a3b65128d2644e9b80cec9a69bfa7e094" kindref="member">uInt16</ref><sp/>pointDePassageForce<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>RECUPERATION<sp/>DES<sp/>PARAMETRE<sp/>DU<sp/>ROBOT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>Robot<sp/>=<sp/><ref refid="config_8c_1a1620e709da932be9c3f2fff78ecf50e3" kindref="member">getRobot</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>ecart_d<sp/>=<ref refid="asserv_distance_8c_1a6f8121ce0d03ce3742599f5afef5f925" kindref="member">calculConsigne_d</ref>(Robot-&gt;<ref refid="structrobot_1ae86408e7874d1ef673a57c10832d14e9" kindref="member">target</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DETECTION<sp/>D<sp/>UN<sp/>ORDRE<sp/>DE<sp/>RECALAGE<sp/>BORDURE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="trajectory_8c_1afefab840827700eeda0e24c711916d14" kindref="member">orientationHack</ref>())</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>pointDePassageForce<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!<ref refid="trajectory_8c_1a86b34ef046b15853e51654f3579bfad0" kindref="member">insidePoint</ref>(Robot-&gt;<ref refid="structrobot_1ae86408e7874d1ef673a57c10832d14e9" kindref="member">target</ref>))<sp/>&amp;&amp;<sp/>(!<ref refid="trajectory_8c_1a86b34ef046b15853e51654f3579bfad0" kindref="member">insidePoint</ref>(Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>)))</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Robot-&gt;<ref refid="structrobot_1a4f3f020964f1c13e38678513aac86b73" kindref="member">rotationMode</ref><sp/>!=<sp/><ref refid="asserv_orientation_8h_1ad31500c1fa379bc91cd681af4d766da8" kindref="member">NO_PWM</ref><sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Robot-&gt;<ref refid="structrobot_1a4f3f020964f1c13e38678513aac86b73" kindref="member">rotationMode</ref><sp/>!=<sp/><ref refid="asserv_orientation_8h_1a0b2769efd8ad04fcf4de0cf8429a58d7" kindref="member">ROTATION_DISABLE</ref>)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1a4f3f020964f1c13e38678513aac86b73" kindref="member">rotationMode</ref><sp/>=<sp/><ref refid="asserv_orientation_8h_1a0b2769efd8ad04fcf4de0cf8429a58d7" kindref="member">ROTATION_DISABLE</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DETECTION<sp/>DE<sp/>L<sp/>ARRIVE<sp/>A<sp/>DESTINATION<sp/><sp/><sp/>ou<sp/>d&apos;une<sp/>replanification<sp/>sauvage<sp/>de<sp/>trajectoire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>((pPlanificationAsked)<sp/>||<sp/>(Robot-&gt;<ref refid="structrobot_1ae86408e7874d1ef673a57c10832d14e9" kindref="member">target</ref>.<ref refid="structpoint_1a8293fd2de3ce739deb6d53691fd21fcf" kindref="member">x</ref><sp/>!=<sp/>Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>.<ref refid="structpoint_1a8293fd2de3ce739deb6d53691fd21fcf" kindref="member">x</ref>)<sp/>||<sp/>(Robot-&gt;<ref refid="structrobot_1ae86408e7874d1ef673a57c10832d14e9" kindref="member">target</ref>.<ref refid="structpoint_1a616ad85a2096d1566f5971666bbc3b3f" kindref="member">y</ref><sp/>!=<sp/>Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>.<ref refid="structpoint_1a616ad85a2096d1566f5971666bbc3b3f" kindref="member">y</ref>)<sp/>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>fabs(ecart_d)<sp/>&lt;<sp/>Robot-&gt;<ref refid="structrobot_1a1a032a501f457b2b537b08ccc5e3af30" kindref="member">entraxe</ref>/2<sp/>)<sp/>||<sp/>pPlanificationAsked<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pPlanificationAsked<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointDePassageForce<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fabs(ecart_d)<sp/>&gt;<sp/><ref refid="config_8c_1a511465638abac4418bc774d5d36b6ad4" kindref="member">toCount</ref>(20))<sp/>&amp;&amp;<sp/>pointDePassageForce)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointDePassageForce<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPlanificationAsked)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotationDeBase<sp/>=<sp/><ref refid="asserv_orientation_8c_1a196d72a8a149bb9ff3d8fbc8acf7789e" kindref="member">calculEcart_rot</ref>(Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ecart_d<sp/>=<ref refid="asserv_distance_8c_1a6f8121ce0d03ce3742599f5afef5f925" kindref="member">calculConsigne_d</ref>(Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotationDeBase<sp/>=<sp/><ref refid="asserv_orientation_8c_1a196d72a8a149bb9ff3d8fbc8acf7789e" kindref="member">calculEcart_rot</ref>(Robot-&gt;<ref refid="structrobot_1ae86408e7874d1ef673a57c10832d14e9" kindref="member">target</ref>);<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fabsf(rotationDeBase)<sp/>&gt;<sp/><ref refid="_a_l_types_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>/2)<sp/>||<sp/>(fabs(ecart_d)<sp/>&lt;<sp/>Robot-&gt;<ref refid="structrobot_1a1a032a501f457b2b537b08ccc5e3af30" kindref="member">entraxe</ref>)<sp/>||<sp/><sp/>(!<ref refid="trajectory_8c_1a86b34ef046b15853e51654f3579bfad0" kindref="member">insidePoint</ref>(Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>)))</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>a<sp/>rotation<sp/>in<sp/>place<sp/>speed<sp/>is<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Robot-&gt;<ref refid="structrobot_1ac6fa501ce3a7ed6eb10a3ebf5283aed4" kindref="member">speedConsigne</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPlanificationAsked)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1ae86408e7874d1ef673a57c10832d14e9" kindref="member">target</ref><sp/>=<sp/>Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(ecart_d)<sp/>&lt;<sp/>Robot-&gt;<ref refid="structrobot_1a1a032a501f457b2b537b08ccc5e3af30" kindref="member">entraxe</ref><sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointDePassageForce<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1a4f3f020964f1c13e38678513aac86b73" kindref="member">rotationMode</ref><sp/>=<sp/><ref refid="asserv_orientation_8h_1a84a1435b09c7f8af9aafca7b941b0964" kindref="member">ROTATION_IN_PLACE</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1ac6fa501ce3a7ed6eb10a3ebf5283aed4" kindref="member">speedConsigne</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1a0a7ff302376daa4ab84f6aa6c533181c" kindref="member">speedConsigneRot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asserv_8c_1a8bb502c0b7288d89f1b34118acd79ef3" kindref="member">gRotationTheorique</ref><sp/>=<sp/>rotationDeBase;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>the<sp/>new<sp/>orientation<sp/>point<sp/>have<sp/>really<sp/>be<sp/>loaded<sp/>and<sp/>that<sp/>it<sp/>is<sp/>not<sp/>just<sp/>a<sp/>planification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="trajectory_8c_1a86b34ef046b15853e51654f3579bfad0" kindref="member">insidePoint</ref>(Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>)<sp/>&amp;&amp;<sp/><sp/>(Robot-&gt;<ref refid="structrobot_1ae86408e7874d1ef673a57c10832d14e9" kindref="member">target</ref>.<ref refid="structpoint_1a8293fd2de3ce739deb6d53691fd21fcf" kindref="member">x</ref><sp/>==<sp/>Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>.<ref refid="structpoint_1a8293fd2de3ce739deb6d53691fd21fcf" kindref="member">x</ref>)<sp/>&amp;&amp;<sp/>(Robot-&gt;<ref refid="structrobot_1ae86408e7874d1ef673a57c10832d14e9" kindref="member">target</ref>.<ref refid="structpoint_1a616ad85a2096d1566f5971666bbc3b3f" kindref="member">y</ref><sp/>==<sp/>Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>.<ref refid="structpoint_1a616ad85a2096d1566f5971666bbc3b3f" kindref="member">y</ref>)<sp/>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sacage<sp/>nextTarget<sp/>so<sp/>target<sp/>and<sp/>nexttarget<sp/>are<sp/>different<sp/>so<sp/>dont<sp/>enter<sp/>in<sp/>relacage<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpoint" kindref="compound">point</ref><sp/>p;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="structpoint_1a8293fd2de3ce739deb6d53691fd21fcf" kindref="member">x</ref><sp/>=<sp/><ref refid="trajectory_8c_1a8c17299ac6ec17cca857281d4c28d679" kindref="member">ROTATION_HACK</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="structpoint_1a616ad85a2096d1566f5971666bbc3b3f" kindref="member">y</ref><sp/>=<sp/><ref refid="trajectory_8c_1a8c17299ac6ec17cca857281d4c28d679" kindref="member">ROTATION_HACK</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pPlanificationAsked)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1a4f3f020964f1c13e38678513aac86b73" kindref="member">rotationMode</ref><sp/>=<sp/><ref refid="asserv_orientation_8h_1a84a1435b09c7f8af9aafca7b941b0964" kindref="member">ROTATION_IN_PLACE</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asserv_8c_1a8bb502c0b7288d89f1b34118acd79ef3" kindref="member">gRotationTheorique</ref><sp/>=<sp/>rotationDeBase;<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1a0a7ff302376daa4ab84f6aa6c533181c" kindref="member">speedConsigneRot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1ac6fa501ce3a7ed6eb10a3ebf5283aed4" kindref="member">speedConsigne</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1a4f3f020964f1c13e38678513aac86b73" kindref="member">rotationMode</ref><sp/>=<sp/><ref refid="asserv_orientation_8h_1a0408feda281bb8c8ae701e042fd279a1" kindref="member">ROTATION_PIVOT</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotationDeBase<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1a0a7ff302376daa4ab84f6aa6c533181c" kindref="member">speedConsigneRot</ref><sp/>=<sp/>(fabs(Robot-&gt;<ref refid="structrobot_1ac6fa501ce3a7ed6eb10a3ebf5283aed4" kindref="member">speedConsigne</ref>)<sp/>*<sp/><ref refid="_a_l_types_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>)/(Robot-&gt;<ref refid="structrobot_1a1a032a501f457b2b537b08ccc5e3af30" kindref="member">entraxe</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1a0a7ff302376daa4ab84f6aa6c533181c" kindref="member">speedConsigneRot</ref><sp/>=<sp/>-(fabs(Robot-&gt;<ref refid="structrobot_1ac6fa501ce3a7ed6eb10a3ebf5283aed4" kindref="member">speedConsigne</ref>)<sp/>*<sp/><ref refid="_a_l_types_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>)/(Robot-&gt;<ref refid="structrobot_1a1a032a501f457b2b537b08ccc5e3af30" kindref="member">entraxe</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="asserv_8c_1a8bb502c0b7288d89f1b34118acd79ef3" kindref="member">gRotationTheorique</ref><sp/>=<sp/>rotationDeBase;<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pPlanificationAsked)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Robot-&gt;<ref refid="structrobot_1ae86408e7874d1ef673a57c10832d14e9" kindref="member">target</ref><sp/>=<sp/>Robot-&gt;<ref refid="structrobot_1a35a150ced7a4f6bf96b91549b761f4b7" kindref="member">nextTarget</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fabs(ecart_d)<sp/>&lt;<sp/>Robot-&gt;<ref refid="structrobot_1a1a032a501f457b2b537b08ccc5e3af30" kindref="member">entraxe</ref>/2<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointDePassageForce<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/trajectory.c"/>
  </compounddef>
</doxygen>
