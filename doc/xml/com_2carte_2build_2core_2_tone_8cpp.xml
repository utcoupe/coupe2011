<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="com_2carte_2build_2core_2_tone_8cpp" kind="file">
    <compoundname>Tone.cpp</compoundname>
    <includes local="no">avr/interrupt.h</includes>
    <includes local="no">avr/pgmspace.h</includes>
    <includes refid="motor_control_2build_2core_2wiring_8h" local="yes">wiring.h</includes>
    <includes refid="motor_control_2build_2core_2pins__arduino_8h" local="yes">pins_arduino.h</includes>
    <incdepgraph>
      <node id="1516">
        <label>pins_arduino.h</label>
        <link refid="motor_control_2build_2core_2pins__arduino_8h"/>
        <childnode refid="1511" relation="include">
        </childnode>
      </node>
      <node id="1510">
        <label>avr/interrupt.h</label>
      </node>
      <node id="1514">
        <label>stdlib.h</label>
      </node>
      <node id="1509">
        <label>com/carte/build/core/Tone.cpp</label>
        <link refid="com/carte/build/core/Tone.cpp"/>
        <childnode refid="1510" relation="include">
        </childnode>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1512" relation="include">
        </childnode>
        <childnode refid="1516" relation="include">
        </childnode>
      </node>
      <node id="1512">
        <label>wiring.h</label>
        <link refid="motor_control_2build_2core_2wiring_8h"/>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1515" relation="include">
        </childnode>
      </node>
      <node id="1513">
        <label>avr/io.h</label>
      </node>
      <node id="1511">
        <label>avr/pgmspace.h</label>
      </node>
      <node id="1515">
        <label>binary.h</label>
        <link refid="motor_control_2build_2core_2binary_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="com_2carte_2build_2core_2_tone_8cpp_1ac1557def0ecf88cd9bb498726398ec50" prot="public" static="no">
        <name>AVAILABLE_TONE_PINS</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="105" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1ad4760817d931e3de7c38da228df9a331" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>volatile long timer0_toggle_count</definition>
        <argsstring></argsstring>
        <name>timer0_toggle_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="57" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1a205ba6b597ec59632d6af3b091068fdb" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>volatile uint8_t* timer0_pin_port</definition>
        <argsstring></argsstring>
        <name>timer0_pin_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="58" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1a906748e28f661986a7c162ca7163f13d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>volatile uint8_t timer0_pin_mask</definition>
        <argsstring></argsstring>
        <name>timer0_pin_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="59" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1abfb10b583902f7d75ac083182ec88b40" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>volatile long timer1_toggle_count</definition>
        <argsstring></argsstring>
        <name>timer1_toggle_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="62" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1a239b66a07cfc177dbc9bde599425a062" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>volatile uint8_t* timer1_pin_port</definition>
        <argsstring></argsstring>
        <name>timer1_pin_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="63" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1a75d650df9407f99701fb1a96bb80d78b" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>volatile uint8_t timer1_pin_mask</definition>
        <argsstring></argsstring>
        <name>timer1_pin_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="64" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1a4d4aba279e8106632322ed02c8d0f5f1" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>volatile long timer2_toggle_count</definition>
        <argsstring></argsstring>
        <name>timer2_toggle_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="65" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1adb53f0106b3a4295cb5162440b37f6a8" prot="public" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>volatile uint8_t* timer2_pin_port</definition>
        <argsstring></argsstring>
        <name>timer2_pin_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="66" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1adc830a5e7410e14d1a283a8f1a31eb98" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>volatile uint8_t timer2_pin_mask</definition>
        <argsstring></argsstring>
        <name>timer2_pin_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="67" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1a184e7105c73b5285498782cdc96ba2bd" prot="public" static="no" mutable="no">
        <type>const uint8_t PROGMEM</type>
        <definition>const uint8_t PROGMEM tone_pin_to_timer_PGM[]</definition>
        <argsstring>[]</argsstring>
        <name>tone_pin_to_timer_PGM</name>
        <initializer> { 2  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="108" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="com_2carte_2build_2core_2_tone_8cpp_1a55d6fbfc72c54336374e780ea4f63e61" prot="public" static="yes" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t tone_pins[AVAILABLE_TONE_PINS]</definition>
        <argsstring>[AVAILABLE_TONE_PINS]</argsstring>
        <name>tone_pins</name>
        <initializer> { 255  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="109" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="com_2carte_2build_2core_2_tone_8cpp_1a8229424adcfd2993d11354d367af060f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t toneBegin</definition>
        <argsstring>(uint8_t _pin)</argsstring>
        <name>toneBegin</name>
        <param>
          <type>uint8_t</type>
          <declname>_pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="116" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="115" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="com_2carte_2build_2core_2_tone_8cpp_1a62bcbbe6c995dd7de4b43b525d529cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tone</definition>
        <argsstring>(uint8_t _pin, unsigned int frequency, unsigned long duration)</argsstring>
        <name>tone</name>
        <param>
          <type>uint8_t</type>
          <declname>_pin</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="231" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="230" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="com_2carte_2build_2core_2_tone_8cpp_1a3768cb4f8fbed3025c554248a60ce202" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void disableTimer</definition>
        <argsstring>(uint8_t _timer)</argsstring>
        <name>disableTimer</name>
        <param>
          <type>uint8_t</type>
          <declname>_timer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="414" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="413" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="com_2carte_2build_2core_2_tone_8cpp_1aeb6515d3e5c6a2079e5bccb03fc6c4f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void noTone</definition>
        <argsstring>(uint8_t _pin)</argsstring>
        <name>noTone</name>
        <param>
          <type>uint8_t</type>
          <declname>_pin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="468" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="467" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="com_2carte_2build_2core_2_tone_8cpp_1a5686c229bdef50123688ab6cb1404230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ISR</definition>
        <argsstring>(TIMER2_COMPA_vect)</argsstring>
        <name>ISR</name>
        <param>
          <type>TIMER2_COMPA_vect</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" line="524" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp" bodystart="523" bodyend="543"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Tone.cpp</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>A<sp/>Tone<sp/>Generator<sp/>Library</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Written<sp/>by<sp/>Brett<sp/>Hagman</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight></codeline>
<codeline lineno="21"><highlight class="comment">Version<sp/>Modified<sp/>By<sp/>Date<sp/><sp/><sp/><sp/><sp/>Comments</highlight></codeline>
<codeline lineno="22"><highlight class="comment">-------<sp/>-----------<sp/>--------<sp/>--------</highlight></codeline>
<codeline lineno="23"><highlight class="comment">0001<sp/><sp/><sp/><sp/>B<sp/>Hagman<sp/><sp/><sp/><sp/>09/08/02<sp/>Initial<sp/>coding</highlight></codeline>
<codeline lineno="24"><highlight class="comment">0002<sp/><sp/><sp/><sp/>B<sp/>Hagman<sp/><sp/><sp/><sp/>09/08/18<sp/>Multiple<sp/>pins</highlight></codeline>
<codeline lineno="25"><highlight class="comment">0003<sp/><sp/><sp/><sp/>B<sp/>Hagman<sp/><sp/><sp/><sp/>09/08/18<sp/>Moved<sp/>initialization<sp/>from<sp/>constructor<sp/>to<sp/>begin()</highlight></codeline>
<codeline lineno="26"><highlight class="comment">0004<sp/><sp/><sp/><sp/>B<sp/>Hagman<sp/><sp/><sp/><sp/>09/09/26<sp/>Fixed<sp/>problems<sp/>with<sp/>ATmega8</highlight></codeline>
<codeline lineno="27"><highlight class="comment">0005<sp/><sp/><sp/><sp/>B<sp/>Hagman<sp/><sp/><sp/><sp/>09/11/23<sp/>Scanned<sp/>prescalars<sp/>for<sp/>best<sp/>fit<sp/>on<sp/>8<sp/>bit<sp/>timers</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>09/11/25<sp/>Changed<sp/>pin<sp/>toggle<sp/>method<sp/>to<sp/>XOR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>09/11/25<sp/>Fixed<sp/>timer0<sp/>from<sp/>being<sp/>excluded</highlight></codeline>
<codeline lineno="30"><highlight class="comment">0006<sp/><sp/><sp/><sp/>D<sp/>Mellis<sp/><sp/><sp/><sp/>09/12/29<sp/>Replaced<sp/>objects<sp/>with<sp/>functions</highlight></codeline>
<codeline lineno="31"><highlight class="comment">0007<sp/><sp/><sp/><sp/>M<sp/>Sproul<sp/><sp/><sp/><sp/>10/08/29<sp/>Changed<sp/>#ifdefs<sp/>from<sp/>cpu<sp/>to<sp/>register</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/interrupt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avr/pgmspace.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="motor_control_2build_2core_2wiring_8h" kindref="compound">wiring.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="motor_control_2build_2core_2pins__arduino_8h" kindref="compound">pins_arduino.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR_ATmega8__)<sp/>||<sp/>defined(__AVR_ATmega128__)</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TCCR2A<sp/>TCCR2</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TCCR2B<sp/>TCCR2</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>COM2A1<sp/>COM21</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>COM2A0<sp/>COM20</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OCR2A<sp/>OCR2</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TIMSK2<sp/>TIMSK</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OCIE2A<sp/>OCIE2</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TIMER2_COMPA_vect<sp/>TIMER2_COMP_vect</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TIMSK1<sp/>TIMSK</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>timerx_toggle_count:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>&gt;<sp/>0<sp/>-<sp/>duration<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>=<sp/>0<sp/>-<sp/>stopped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>&lt;<sp/>0<sp/>-<sp/>infinitely<sp/>(until<sp/>stop()<sp/>method<sp/>called,<sp/>or<sp/>new<sp/>play()<sp/>called)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__AVR_ATmega8__)</highlight></codeline>
<codeline lineno="57" refid="com_2carte_2build_2core_2_tone_8cpp_1ad4760817d931e3de7c38da228df9a331" refkind="member"><highlight class="preprocessor"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1ad4760817d931e3de7c38da228df9a331" kindref="member">timer0_toggle_count</ref>;</highlight></codeline>
<codeline lineno="58" refid="com_2carte_2build_2core_2_tone_8cpp_1a205ba6b597ec59632d6af3b091068fdb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a205ba6b597ec59632d6af3b091068fdb" kindref="member">timer0_pin_port</ref>;</highlight></codeline>
<codeline lineno="59" refid="com_2carte_2build_2core_2_tone_8cpp_1a906748e28f661986a7c162ca7163f13d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a906748e28f661986a7c162ca7163f13d" kindref="member">timer0_pin_mask</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="com_2carte_2build_2core_2_tone_8cpp_1abfb10b583902f7d75ac083182ec88b40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1abfb10b583902f7d75ac083182ec88b40" kindref="member">timer1_toggle_count</ref>;</highlight></codeline>
<codeline lineno="63" refid="com_2carte_2build_2core_2_tone_8cpp_1a239b66a07cfc177dbc9bde599425a062" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a239b66a07cfc177dbc9bde599425a062" kindref="member">timer1_pin_port</ref>;</highlight></codeline>
<codeline lineno="64" refid="com_2carte_2build_2core_2_tone_8cpp_1a75d650df9407f99701fb1a96bb80d78b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a75d650df9407f99701fb1a96bb80d78b" kindref="member">timer1_pin_mask</ref>;</highlight></codeline>
<codeline lineno="65" refid="com_2carte_2build_2core_2_tone_8cpp_1a4d4aba279e8106632322ed02c8d0f5f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a4d4aba279e8106632322ed02c8d0f5f1" kindref="member">timer2_toggle_count</ref>;</highlight></codeline>
<codeline lineno="66" refid="com_2carte_2build_2core_2_tone_8cpp_1adb53f0106b3a4295cb5162440b37f6a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<ref refid="com_2carte_2build_2core_2_tone_8cpp_1adb53f0106b3a4295cb5162440b37f6a8" kindref="member">timer2_pin_port</ref>;</highlight></codeline>
<codeline lineno="67" refid="com_2carte_2build_2core_2_tone_8cpp_1adc830a5e7410e14d1a283a8f1a31eb98" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1adc830a5e7410e14d1a283a8f1a31eb98" kindref="member">timer2_pin_mask</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TIMSK3)</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timer3_toggle_count;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*timer3_pin_port;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>timer3_pin_mask;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TIMSK4)</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timer4_toggle_count;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*timer4_pin_port;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>timer4_pin_mask;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TIMSK5)</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>timer5_toggle_count;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>*timer5_pin_port;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint8_t<sp/>timer5_pin_mask;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MLS:<sp/>This<sp/>does<sp/>not<sp/>make<sp/>sense,<sp/>the<sp/>3<sp/>options<sp/>are<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__AVR_ATmega1280__)<sp/>||<sp/>defined(__AVR_ATmega2560__)</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVAILABLE_TONE_PINS<sp/>1</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>PROGMEM<sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a184e7105c73b5285498782cdc96ba2bd" kindref="member">tone_pin_to_timer_PGM</ref>[]<sp/>=<sp/>{<sp/>2<sp/></highlight><highlight class="comment">/*,<sp/>3,<sp/>4,<sp/>5,<sp/>1,<sp/>0<sp/>*/</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>tone_pins[<ref refid="com_2carte_2build_2core_2_tone_8cpp_1ac1557def0ecf88cd9bb498726398ec50" kindref="member">AVAILABLE_TONE_PINS</ref>]<sp/>=<sp/>{<sp/>255<sp/></highlight><highlight class="comment">/*,<sp/>255,<sp/>255,<sp/>255,<sp/>255,<sp/>255<sp/>*/</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__AVR_ATmega8__)</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVAILABLE_TONE_PINS<sp/>1</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>PROGMEM<sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a184e7105c73b5285498782cdc96ba2bd" kindref="member">tone_pin_to_timer_PGM</ref>[]<sp/>=<sp/>{<sp/>2<sp/></highlight><highlight class="comment">/*,<sp/>1<sp/>*/</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>tone_pins[<ref refid="com_2carte_2build_2core_2_tone_8cpp_1ac1557def0ecf88cd9bb498726398ec50" kindref="member">AVAILABLE_TONE_PINS</ref>]<sp/>=<sp/>{<sp/>255<sp/></highlight><highlight class="comment">/*,<sp/>255<sp/>*/</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="com_2carte_2build_2core_2_tone_8cpp_1ac1557def0ecf88cd9bb498726398ec50" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVAILABLE_TONE_PINS<sp/>1</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Leave<sp/>timer<sp/>0<sp/>to<sp/>last.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="com_2carte_2build_2core_2_tone_8cpp_1a184e7105c73b5285498782cdc96ba2bd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>PROGMEM<sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a184e7105c73b5285498782cdc96ba2bd" kindref="member">tone_pin_to_timer_PGM</ref>[]<sp/>=<sp/>{<sp/>2<sp/></highlight><highlight class="comment">/*,<sp/>1,<sp/>0<sp/>*/</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>tone_pins[<ref refid="com_2carte_2build_2core_2_tone_8cpp_1ac1557def0ecf88cd9bb498726398ec50" kindref="member">AVAILABLE_TONE_PINS</ref>]<sp/>=<sp/>{<sp/>255<sp/></highlight><highlight class="comment">/*,<sp/>255,<sp/>255<sp/>*/</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>toneBegin(uint8_t<sp/>_pin)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>int8_t<sp/>_timer<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;re<sp/>already<sp/>using<sp/>the<sp/>pin,<sp/>the<sp/>timer<sp/>should<sp/>be<sp/>configured.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1ac1557def0ecf88cd9bb498726398ec50" kindref="member">AVAILABLE_TONE_PINS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tone_pins[i]<sp/>==<sp/>_pin)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pgm_read_byte(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a184e7105c73b5285498782cdc96ba2bd" kindref="member">tone_pin_to_timer_PGM</ref><sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>for<sp/>an<sp/>unused<sp/>timer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AVAILABLE_TONE_PINS;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tone_pins[i]<sp/>==<sp/>255)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tone_pins[i]<sp/>=<sp/>_pin;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_timer<sp/>=<sp/>pgm_read_byte(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a184e7105c73b5285498782cdc96ba2bd" kindref="member">tone_pin_to_timer_PGM</ref><sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timer<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>timer<sp/>specific<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>timers<sp/>in<sp/>CTC<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8<sp/>bit<sp/>timers<sp/>will<sp/>require<sp/>changing<sp/>prescalar<sp/>values,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whereas<sp/>16<sp/>bit<sp/>timers<sp/>are<sp/>set<sp/>to<sp/>either<sp/>ck/1<sp/>or<sp/>ck/64<sp/>prescalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_timer)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(TCCR0A)<sp/>&amp;&amp;<sp/>defined(TCCR0B)</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8<sp/>bit<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR0A<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR0B<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR0A,<sp/>WGM01,<sp/>1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR0B,<sp/>CS00,<sp/>1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a205ba6b597ec59632d6af3b091068fdb" kindref="member">timer0_pin_port</ref><sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a50e1d61573f6ba2a1748a58a1abf25ac" kindref="member">portOutputRegister</ref>(<ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a695126157083b643a98b9b800e28ac6f" kindref="member">digitalPinToPort</ref>(_pin));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a906748e28f661986a7c162ca7163f13d" kindref="member">timer0_pin_mask</ref><sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a97d049a432ec5a04c40510df440c786a" kindref="member">digitalPinToBitMask</ref>(_pin);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(TCCR1A)<sp/>&amp;&amp;<sp/>defined(TCCR1B)<sp/>&amp;&amp;<sp/>defined(WGM12)</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16<sp/>bit<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR1A<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR1B<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR1B,<sp/>WGM12,<sp/>1);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR1B,<sp/>CS10,<sp/>1);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a239b66a07cfc177dbc9bde599425a062" kindref="member">timer1_pin_port</ref><sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a50e1d61573f6ba2a1748a58a1abf25ac" kindref="member">portOutputRegister</ref>(<ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a695126157083b643a98b9b800e28ac6f" kindref="member">digitalPinToPort</ref>(_pin));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a75d650df9407f99701fb1a96bb80d78b" kindref="member">timer1_pin_mask</ref><sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a97d049a432ec5a04c40510df440c786a" kindref="member">digitalPinToBitMask</ref>(_pin);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(TCCR2A)<sp/>&amp;&amp;<sp/>defined(TCCR2B)</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8<sp/>bit<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR2A<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR2B<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR2A,<sp/>WGM21,<sp/>1);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR2B,<sp/>CS20,<sp/>1);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1adb53f0106b3a4295cb5162440b37f6a8" kindref="member">timer2_pin_port</ref><sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a50e1d61573f6ba2a1748a58a1abf25ac" kindref="member">portOutputRegister</ref>(<ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a695126157083b643a98b9b800e28ac6f" kindref="member">digitalPinToPort</ref>(_pin));</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1adc830a5e7410e14d1a283a8f1a31eb98" kindref="member">timer2_pin_mask</ref><sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a97d049a432ec5a04c40510df440c786a" kindref="member">digitalPinToBitMask</ref>(_pin);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(TCCR3A)<sp/>&amp;&amp;<sp/>defined(TCCR3B)<sp/>&amp;&amp;<sp/><sp/>defined(TIMSK3)</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16<sp/>bit<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR3A<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR3B<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR3B,<sp/>WGM32,<sp/>1);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR3B,<sp/>CS30,<sp/>1);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer3_pin_port<sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a50e1d61573f6ba2a1748a58a1abf25ac" kindref="member">portOutputRegister</ref>(<ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a695126157083b643a98b9b800e28ac6f" kindref="member">digitalPinToPort</ref>(_pin));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer3_pin_mask<sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a97d049a432ec5a04c40510df440c786a" kindref="member">digitalPinToBitMask</ref>(_pin);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(TCCR4A)<sp/>&amp;&amp;<sp/>defined(TCCR4B)<sp/>&amp;&amp;<sp/><sp/>defined(TIMSK4)</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16<sp/>bit<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR4A<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR4B<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(WGM42)</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR4B,<sp/>WGM42,<sp/>1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#elif<sp/>defined(CS43)</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#warning<sp/>this<sp/>may<sp/>not<sp/>be<sp/>correct</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>atmega32u4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR4B,<sp/>CS43,<sp/>1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR4B,<sp/>CS40,<sp/>1);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer4_pin_port<sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a50e1d61573f6ba2a1748a58a1abf25ac" kindref="member">portOutputRegister</ref>(<ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a695126157083b643a98b9b800e28ac6f" kindref="member">digitalPinToPort</ref>(_pin));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer4_pin_mask<sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a97d049a432ec5a04c40510df440c786a" kindref="member">digitalPinToBitMask</ref>(_pin);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(TCCR5A)<sp/>&amp;&amp;<sp/>defined(TCCR5B)<sp/>&amp;&amp;<sp/><sp/>defined(TIMSK5)</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16<sp/>bit<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR5A<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR5B<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR5B,<sp/>WGM52,<sp/>1);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TCCR5B,<sp/>CS50,<sp/>1);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer5_pin_port<sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a50e1d61573f6ba2a1748a58a1abf25ac" kindref="member">portOutputRegister</ref>(<ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a695126157083b643a98b9b800e28ac6f" kindref="member">digitalPinToPort</ref>(_pin));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer5_pin_mask<sp/>=<sp/><ref refid="com_2carte_2build_2core_2pins__arduino_8h_1a97d049a432ec5a04c40510df440c786a" kindref="member">digitalPinToBitMask</ref>(_pin);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="220"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_timer;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>frequency<sp/>(in<sp/>hertz)<sp/>and<sp/>duration<sp/>(in<sp/>milliseconds).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="com_2carte_2build_2core_2_tone_8cpp_1a62bcbbe6c995dd7de4b43b525d529cdb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a62bcbbe6c995dd7de4b43b525d529cdb" kindref="member">tone</ref>(uint8_t<sp/>_pin,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frequency,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>duration)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>uint8_t<sp/>prescalarbits<sp/>=<sp/>0b001;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>toggle_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>uint32_t<sp/>ocr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>int8_t<sp/>_timer;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>_timer<sp/>=<sp/>toneBegin(_pin);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timer<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>pinMode<sp/>as<sp/>OUTPUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1aedf28437b0c388082e19f9f6e4f47cf0" kindref="member">pinMode</ref>(_pin,<sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a61a3c9a18380aafb6e430e79bf596557" kindref="member">OUTPUT</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>using<sp/>an<sp/>8<sp/>bit<sp/>timer,<sp/>scan<sp/>through<sp/>prescalars<sp/>to<sp/>find<sp/>the<sp/>best<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timer<sp/>==<sp/>0<sp/>||<sp/>_timer<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ocr<sp/>=<sp/>F_CPU<sp/>/<sp/>frequency<sp/>/<sp/>2<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prescalarbits<sp/>=<sp/>0b001;<sp/><sp/></highlight><highlight class="comment">//<sp/>ck/1:<sp/>same<sp/>for<sp/>both<sp/>timers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ocr<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ocr<sp/>=<sp/>F_CPU<sp/>/<sp/>frequency<sp/>/<sp/>2<sp/>/<sp/>8<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prescalarbits<sp/>=<sp/>0b010;<sp/><sp/></highlight><highlight class="comment">//<sp/>ck/8:<sp/>same<sp/>for<sp/>both<sp/>timers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timer<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>ocr<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ocr<sp/>=<sp/>F_CPU<sp/>/<sp/>frequency<sp/>/<sp/>2<sp/>/<sp/>32<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prescalarbits<sp/>=<sp/>0b011;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ocr<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ocr<sp/>=<sp/>F_CPU<sp/>/<sp/>frequency<sp/>/<sp/>2<sp/>/<sp/>64<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prescalarbits<sp/>=<sp/>_timer<sp/>==<sp/>0<sp/>?<sp/>0b011<sp/>:<sp/>0b100;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timer<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>ocr<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ocr<sp/>=<sp/>F_CPU<sp/>/<sp/>frequency<sp/>/<sp/>2<sp/>/<sp/>128<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prescalarbits<sp/>=<sp/>0b101;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ocr<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ocr<sp/>=<sp/>F_CPU<sp/>/<sp/>frequency<sp/>/<sp/>2<sp/>/<sp/>256<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prescalarbits<sp/>=<sp/>_timer<sp/>==<sp/>0<sp/>?<sp/>0b100<sp/>:<sp/>0b110;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ocr<sp/>&gt;<sp/>255)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>do<sp/>any<sp/>better<sp/>than<sp/>/1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ocr<sp/>=<sp/>F_CPU<sp/>/<sp/>frequency<sp/>/<sp/>2<sp/>/<sp/>1024<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prescalarbits<sp/>=<sp/>_timer<sp/>==<sp/>0<sp/>?<sp/>0b101<sp/>:<sp/>0b111;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TCCR0B)</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timer<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR0B<sp/>=<sp/>prescalarbits;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(TCCR2B)</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR2B<sp/>=<sp/>prescalarbits;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dummy<sp/>place<sp/>holder<sp/>to<sp/>make<sp/>the<sp/>above<sp/>ifdefs<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>choices<sp/>for<sp/>the<sp/>16<sp/>bit<sp/>timers:<sp/>ck/1<sp/>or<sp/>ck/64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ocr<sp/>=<sp/>F_CPU<sp/>/<sp/>frequency<sp/>/<sp/>2<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prescalarbits<sp/>=<sp/>0b001;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ocr<sp/>&gt;<sp/>0xffff)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ocr<sp/>=<sp/>F_CPU<sp/>/<sp/>frequency<sp/>/<sp/>2<sp/>/<sp/>64<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prescalarbits<sp/>=<sp/>0b011;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timer<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TCCR1B)</highlight></codeline>
<codeline lineno="317"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR1B<sp/>=<sp/>(TCCR1B<sp/>&amp;<sp/>0b11111000)<sp/>|<sp/>prescalarbits;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="319"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TCCR3B)</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timer<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR3B<sp/>=<sp/>(TCCR3B<sp/>&amp;<sp/>0b11111000)<sp/>|<sp/>prescalarbits;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="324"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(TCCR4B)</highlight></codeline>
<codeline lineno="325"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timer<sp/>==<sp/>4)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR4B<sp/>=<sp/>(TCCR4B<sp/>&amp;<sp/>0b11111000)<sp/>|<sp/>prescalarbits;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="328"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>defined(TCCR5B)</highlight></codeline>
<codeline lineno="329"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timer<sp/>==<sp/>5)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR5B<sp/>=<sp/>(TCCR5B<sp/>&amp;<sp/>0b11111000)<sp/>|<sp/>prescalarbits;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>toggle<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(duration<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toggle_count<sp/>=<sp/>2<sp/>*<sp/>frequency<sp/>*<sp/>duration<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>toggle_count<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>OCR<sp/>for<sp/>the<sp/>given<sp/>timer,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>toggle<sp/>count,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>turn<sp/>on<sp/>the<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_timer)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(OCR0A)<sp/>&amp;&amp;<sp/>defined(TIMSK0)<sp/>&amp;&amp;<sp/>defined(OCIE0A)</highlight></codeline>
<codeline lineno="353"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OCR0A<sp/>=<sp/>ocr;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1ad4760817d931e3de7c38da228df9a331" kindref="member">timer0_toggle_count</ref><sp/>=<sp/>toggle_count;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TIMSK0,<sp/>OCIE0A,<sp/>1);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="359"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(OCR1A)<sp/>&amp;&amp;<sp/>defined(TIMSK1)<sp/>&amp;&amp;<sp/>defined(OCIE1A)</highlight></codeline>
<codeline lineno="362"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OCR1A<sp/>=<sp/>ocr;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1abfb10b583902f7d75ac083182ec88b40" kindref="member">timer1_toggle_count</ref><sp/>=<sp/>toggle_count;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TIMSK1,<sp/>OCIE1A,<sp/>1);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(OCR1A)<sp/>&amp;&amp;<sp/>defined(TIMSK)<sp/>&amp;&amp;<sp/>defined(OCIE1A)</highlight></codeline>
<codeline lineno="366"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>combination<sp/>is<sp/>for<sp/>at<sp/>least<sp/>the<sp/>ATmega32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OCR1A<sp/>=<sp/>ocr;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1abfb10b583902f7d75ac083182ec88b40" kindref="member">timer1_toggle_count</ref><sp/>=<sp/>toggle_count;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TIMSK,<sp/>OCIE1A,<sp/>1);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="371"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(OCR2A)<sp/>&amp;&amp;<sp/>defined(TIMSK2)<sp/>&amp;&amp;<sp/>defined(OCIE2A)</highlight></codeline>
<codeline lineno="374"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OCR2A<sp/>=<sp/>ocr;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a4d4aba279e8106632322ed02c8d0f5f1" kindref="member">timer2_toggle_count</ref><sp/>=<sp/>toggle_count;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TIMSK2,<sp/>OCIE2A,<sp/>1);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="380"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TIMSK3)</highlight></codeline>
<codeline lineno="382"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OCR3A<sp/>=<sp/>ocr;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer3_toggle_count<sp/>=<sp/>toggle_count;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TIMSK3,<sp/>OCIE3A,<sp/>1);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="388"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TIMSK4)</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OCR4A<sp/>=<sp/>ocr;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer4_toggle_count<sp/>=<sp/>toggle_count;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TIMSK4,<sp/>OCIE4A,<sp/>1);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(OCR5A)<sp/>&amp;&amp;<sp/>defined(TIMSK5)<sp/>&amp;&amp;<sp/>defined(OCIE5A)</highlight></codeline>
<codeline lineno="398"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OCR5A<sp/>=<sp/>ocr;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer5_toggle_count<sp/>=<sp/>toggle_count;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TIMSK5,<sp/>OCIE5A,<sp/>1);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="404"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>XXX:<sp/>this<sp/>function<sp/>only<sp/>works<sp/>properly<sp/>for<sp/>timer<sp/>2<sp/>(the<sp/>only<sp/>one<sp/>we<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/>currently).<sp/><sp/>for<sp/>the<sp/>others,<sp/>it<sp/>should<sp/>end<sp/>the<sp/>tone,<sp/>but<sp/>won&apos;t<sp/>restore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>proper<sp/>PWM<sp/>functionality<sp/>for<sp/>the<sp/>timer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="com_2carte_2build_2core_2_tone_8cpp_1a3768cb4f8fbed3025c554248a60ce202" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a3768cb4f8fbed3025c554248a60ce202" kindref="member">disableTimer</ref>(uint8_t<sp/>_timer)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_timer)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(TIMSK0)</highlight></codeline>
<codeline lineno="419"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TIMSK0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#elif<sp/>defined(TIMSK)</highlight></codeline>
<codeline lineno="421"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TIMSK<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>atmega32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="423"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TIMSK1)<sp/>&amp;&amp;<sp/>defined(OCIE1A)</highlight></codeline>
<codeline lineno="426"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TIMSK1,<sp/>OCIE1A,<sp/>0);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="430"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(TIMSK2)<sp/>&amp;&amp;<sp/>defined(OCIE2A)</highlight></codeline>
<codeline lineno="433"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a42c17f59f3f9a3112d01246760067a8e" kindref="member">bitWrite</ref>(TIMSK2,<sp/>OCIE2A,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>disable<sp/>interrupt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="435"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(TCCR2A)<sp/>&amp;&amp;<sp/>defined(WGM20)</highlight></codeline>
<codeline lineno="436"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR2A<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>WGM20);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(TCCR2B)<sp/>&amp;&amp;<sp/>defined(CS22)</highlight></codeline>
<codeline lineno="439"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TCCR2B<sp/>=<sp/>(TCCR2B<sp/>&amp;<sp/>0b11111000)<sp/>|<sp/>(1<sp/>&lt;&lt;<sp/>CS22);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>defined(OCR2A)</highlight></codeline>
<codeline lineno="442"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OCR2A<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="444"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TIMSK3)</highlight></codeline>
<codeline lineno="447"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIMSK3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="451"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TIMSK4)</highlight></codeline>
<codeline lineno="453"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIMSK4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="457"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(TIMSK5)</highlight></codeline>
<codeline lineno="459"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TIMSK5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="463"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="com_2carte_2build_2core_2_tone_8cpp_1aeb6515d3e5c6a2079e5bccb03fc6c4f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1aeb6515d3e5c6a2079e5bccb03fc6c4f7" kindref="member">noTone</ref>(uint8_t<sp/>_pin)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>int8_t<sp/>_timer<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>AVAILABLE_TONE_PINS;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tone_pins[i]<sp/>==<sp/>_pin)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_timer<sp/>=<sp/>pgm_read_byte(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a184e7105c73b5285498782cdc96ba2bd" kindref="member">tone_pin_to_timer_PGM</ref><sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tone_pins[i]<sp/>=<sp/>255;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a3768cb4f8fbed3025c554248a60ce202" kindref="member">disableTimer</ref>(_timer);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><ref refid="com_2carte_2build_2core_2wiring_8h_1a9d505fa07341c65c11e2c236550b748f" kindref="member">digitalWrite</ref>(_pin,<sp/>0);</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="484"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>!defined(__AVR_ATmega8__)</highlight></codeline>
<codeline lineno="485"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a5686c229bdef50123688ab6cb1404230" kindref="member">ISR</ref>(TIMER0_COMPA_vect)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1ad4760817d931e3de7c38da228df9a331" kindref="member">timer0_toggle_count</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>toggle<sp/>the<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a205ba6b597ec59632d6af3b091068fdb" kindref="member">timer0_pin_port</ref><sp/>^=<sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a906748e28f661986a7c162ca7163f13d" kindref="member">timer0_pin_mask</ref>;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1ad4760817d931e3de7c38da228df9a331" kindref="member">timer0_toggle_count</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1ad4760817d931e3de7c38da228df9a331" kindref="member">timer0_toggle_count</ref>--;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a3768cb4f8fbed3025c554248a60ce202" kindref="member">disableTimer</ref>(0);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a205ba6b597ec59632d6af3b091068fdb" kindref="member">timer0_pin_port</ref><sp/>&amp;=<sp/>~(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a906748e28f661986a7c162ca7163f13d" kindref="member">timer0_pin_mask</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>pin<sp/>low<sp/>after<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="502"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a5686c229bdef50123688ab6cb1404230" kindref="member">ISR</ref>(TIMER1_COMPA_vect)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1abfb10b583902f7d75ac083182ec88b40" kindref="member">timer1_toggle_count</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>toggle<sp/>the<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a239b66a07cfc177dbc9bde599425a062" kindref="member">timer1_pin_port</ref><sp/>^=<sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a75d650df9407f99701fb1a96bb80d78b" kindref="member">timer1_pin_mask</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1abfb10b583902f7d75ac083182ec88b40" kindref="member">timer1_toggle_count</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1abfb10b583902f7d75ac083182ec88b40" kindref="member">timer1_toggle_count</ref>--;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a3768cb4f8fbed3025c554248a60ce202" kindref="member">disableTimer</ref>(1);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a239b66a07cfc177dbc9bde599425a062" kindref="member">timer1_pin_port</ref><sp/>&amp;=<sp/>~(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a75d650df9407f99701fb1a96bb80d78b" kindref="member">timer1_pin_mask</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>pin<sp/>low<sp/>after<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="521"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523" refid="com_2carte_2build_2core_2_tone_8cpp_1a5686c229bdef50123688ab6cb1404230" refkind="member"><highlight class="normal"><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a5686c229bdef50123688ab6cb1404230" kindref="member">ISR</ref>(TIMER2_COMPA_vect)</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a4d4aba279e8106632322ed02c8d0f5f1" kindref="member">timer2_toggle_count</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>toggle<sp/>the<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="com_2carte_2build_2core_2_tone_8cpp_1adb53f0106b3a4295cb5162440b37f6a8" kindref="member">timer2_pin_port</ref><sp/>^=<sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1adc830a5e7410e14d1a283a8f1a31eb98" kindref="member">timer2_pin_mask</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="com_2carte_2build_2core_2_tone_8cpp_1a4d4aba279e8106632322ed02c8d0f5f1" kindref="member">timer2_toggle_count</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a4d4aba279e8106632322ed02c8d0f5f1" kindref="member">timer2_toggle_count</ref>--;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>call<sp/>noTone()<sp/>so<sp/>that<sp/>the<sp/>tone_pins[]<sp/>entry<sp/>is<sp/>reset,<sp/>so<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>timer<sp/>gets<sp/>initialized<sp/>next<sp/>time<sp/>we<sp/>call<sp/>tone().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX:<sp/>this<sp/>assumes<sp/>timer<sp/>2<sp/>is<sp/>always<sp/>the<sp/>first<sp/>one<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1aeb6515d3e5c6a2079e5bccb03fc6c4f7" kindref="member">noTone</ref>(tone_pins[0]);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>disableTimer(2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>*timer2_pin_port<sp/>&amp;=<sp/>~(timer2_pin_mask);<sp/><sp/>//<sp/>keep<sp/>pin<sp/>low<sp/>after<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">//#if<sp/>defined(__AVR_ATmega1280__)<sp/>||<sp/>defined(__AVR_ATmega2560__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a5686c229bdef50123688ab6cb1404230" kindref="member">ISR</ref>(TIMER3_COMPA_vect)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer3_toggle_count<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>toggle<sp/>the<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>*timer3_pin_port<sp/>^=<sp/>timer3_pin_mask;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer3_toggle_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer3_toggle_count--;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a3768cb4f8fbed3025c554248a60ce202" kindref="member">disableTimer</ref>(3);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>*timer3_pin_port<sp/>&amp;=<sp/>~(timer3_pin_mask);<sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>pin<sp/>low<sp/>after<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a5686c229bdef50123688ab6cb1404230" kindref="member">ISR</ref>(TIMER4_COMPA_vect)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer4_toggle_count<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>toggle<sp/>the<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>*timer4_pin_port<sp/>^=<sp/>timer4_pin_mask;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer4_toggle_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer4_toggle_count--;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a3768cb4f8fbed3025c554248a60ce202" kindref="member">disableTimer</ref>(4);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>*timer4_pin_port<sp/>&amp;=<sp/>~(timer4_pin_mask);<sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>pin<sp/>low<sp/>after<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a5686c229bdef50123688ab6cb1404230" kindref="member">ISR</ref>(TIMER5_COMPA_vect)</highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer5_toggle_count<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>toggle<sp/>the<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>*timer5_pin_port<sp/>^=<sp/>timer5_pin_mask;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer5_toggle_count<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>timer5_toggle_count--;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="com_2carte_2build_2core_2_tone_8cpp_1a3768cb4f8fbed3025c554248a60ce202" kindref="member">disableTimer</ref>(5);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>*timer5_pin_port<sp/>&amp;=<sp/>~(timer5_pin_mask);<sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>pin<sp/>low<sp/>after<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/com/carte/build/core/Tone.cpp"/>
  </compounddef>
</doxygen>
