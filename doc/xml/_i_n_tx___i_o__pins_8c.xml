<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.6.3">
  <compounddef id="_i_n_tx___i_o__pins_8c" kind="file">
    <compoundname>INTx_IO_pins.c</compoundname>
    <includes local="no">p30fxxxx.h</includes>
    <includes local="yes">system.h</includes>
    <includes local="yes">intx_io_pins.h</includes>
    <incdepgraph>
      <node id="1191">
        <label>asserv2010/INTx_IO_pins.c</label>
        <link refid="INTx_IO_pins.c"/>
        <childnode refid="1192" relation="include">
        </childnode>
        <childnode refid="1193" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
      </node>
      <node id="1192">
        <label>p30fxxxx.h</label>
      </node>
      <node id="1194">
        <label>intx_io_pins.h</label>
      </node>
      <node id="1193">
        <label>system.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_i_n_tx___i_o__pins_8c_1a08c8986a914404a098cc9fce4734af8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void INTx_IO_Init</definition>
        <argsstring>(void)</argsstring>
        <name>INTx_IO_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/INTx_IO_pins.c" line="46" bodyfile="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/INTx_IO_pins.c" bodystart="45" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">;<sp/>©<sp/>2005<sp/><sp/>Microchip<sp/>Technology<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment">;</highlight></codeline>
<codeline lineno="4"><highlight class="comment">;<sp/>Microchip<sp/>Technology<sp/>Inc.<sp/>(“Microchip”)<sp/>licenses<sp/>this<sp/>software<sp/>to<sp/>you</highlight></codeline>
<codeline lineno="5"><highlight class="comment">;<sp/>solely<sp/>for<sp/>use<sp/>with<sp/>Microchip<sp/>dsPIC®<sp/>digital<sp/>signal<sp/>controller</highlight></codeline>
<codeline lineno="6"><highlight class="comment">;<sp/>products.<sp/><sp/>The<sp/>software<sp/>is<sp/>owned<sp/>by<sp/>Microchip<sp/>and<sp/>is<sp/>protected<sp/>under</highlight></codeline>
<codeline lineno="7"><highlight class="comment">;<sp/>applicable<sp/>copyright<sp/>laws.<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">;</highlight></codeline>
<codeline lineno="9"><highlight class="comment">;<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>“AS<sp/>IS.”<sp/><sp/>MICROCHIP<sp/>EXPRESSLY<sp/>DISCLAIMS<sp/>ANY</highlight></codeline>
<codeline lineno="10"><highlight class="comment">;<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>WHETHER<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="11"><highlight class="comment">;<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A</highlight></codeline>
<codeline lineno="12"><highlight class="comment">;<sp/>PARTICULAR<sp/>PURPOSE,<sp/>OR<sp/>NON-INFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>MICROCHIP</highlight></codeline>
<codeline lineno="13"><highlight class="comment">;<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>INDIRECT<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="14"><highlight class="comment">;<sp/>DAMAGES,<sp/>LOST<sp/>PROFITS<sp/>OR<sp/>LOST<sp/>DATA,<sp/>HARM<sp/>TO<sp/>YOUR<sp/>EQUIPMENT,<sp/>COST<sp/>OF</highlight></codeline>
<codeline lineno="15"><highlight class="comment">;<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS,<sp/>TECHNOLOGY<sp/>OR<sp/>SERVICES,<sp/>ANY<sp/>CLAIMS</highlight></codeline>
<codeline lineno="16"><highlight class="comment">;<sp/>BY<sp/>THIRD<sp/>PARTIES<sp/>(INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>ANY<sp/>DEFENSE<sp/>THEREOF),</highlight></codeline>
<codeline lineno="17"><highlight class="comment">;<sp/>ANY<sp/>CLAIMS<sp/>FOR<sp/>INDEMNITY<sp/>OR<sp/>CONTRIBUTION,<sp/>OR<sp/>OTHER<sp/>SIMILAR<sp/>COSTS.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">;</highlight></codeline>
<codeline lineno="19"><highlight class="comment">;</highlight></codeline>
<codeline lineno="20"><highlight class="comment">;FILE<sp/>DESCRIPTION:</highlight></codeline>
<codeline lineno="21"><highlight class="comment">;<sp/>This<sp/>file<sp/>contains<sp/>set<sp/>up<sp/>and<sp/>interrupt<sp/>service<sp/>routines<sp/>for</highlight></codeline>
<codeline lineno="22"><highlight class="comment">;<sp/>I/O<sp/>ports<sp/>and<sp/>External<sp/>Interrupt<sp/>pins<sp/>connected<sp/>to<sp/>the<sp/>switches<sp/>and</highlight></codeline>
<codeline lineno="23"><highlight class="comment">;<sp/>LEDs<sp/>provided<sp/>on<sp/>the<sp/>dsPICDEM2<sp/>development<sp/>board.</highlight></codeline>
<codeline lineno="24"><highlight class="comment">;</highlight></codeline>
<codeline lineno="25"><highlight class="comment">;REVISION<sp/>HISTORY:</highlight></codeline>
<codeline lineno="26"><highlight class="comment">;<sp/><sp/>$Log:<sp/>INTx_IO_pins.c,v<sp/>$</highlight></codeline>
<codeline lineno="27"><highlight class="comment">;<sp/><sp/>Revision<sp/>1.1.1.1<sp/><sp/>2005/06/06<sp/>09:16:45<sp/><sp/>VasukiH</highlight></codeline>
<codeline lineno="28"><highlight class="comment">;<sp/><sp/>First<sp/>release<sp/>of<sp/>software</highlight></codeline>
<codeline lineno="29"><highlight class="comment">;</highlight></codeline>
<codeline lineno="30"><highlight class="comment">;</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//Pre-Processor<sp/>Directives:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;p30fxxxx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;system.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;intx_io_pins.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//Functions<sp/>and<sp/>Variables<sp/>with<sp/>Global<sp/>Scope:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//Functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//INTx_IO_Init()<sp/>sets<sp/>up<sp/>the<sp/>INT0<sp/>and<sp/>INT1<sp/>pins<sp/>connected<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//switches<sp/>S5<sp/>and<sp/>S6,<sp/>on<sp/>the<sp/>dsPICDEM2<sp/>board.<sp/>It<sp/>also<sp/>sets<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//pins,<sp/>RB0<sp/>and<sp/>RB1,<sp/>as<sp/>output<sp/>pins<sp/>to<sp/>drive<sp/>LEDs,<sp/>D3<sp/>and<sp/>D4.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="_i_n_tx___i_o__pins_8h_1a08c8986a914404a098cc9fce4734af8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_i_n_tx___i_o__pins_8c_1a08c8986a914404a098cc9fce4734af8a" kindref="member">INTx_IO_Init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>//Set<sp/>up<sp/>Switches<sp/>S5<sp/>and<sp/>S6<sp/>as<sp/>external<sp/>interrupt<sp/>input<sp/>pins</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//S5<sp/>connected<sp/>to<sp/>INT0</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//S6<sp/>connected<sp/>to<sp/>INT1</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTCON2<sp/>=<sp/>0x0003;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Setup<sp/>INT0-1<sp/>pins<sp/>to<sp/>interupt<sp/>on<sp/>falling<sp/>edge</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFS0bits.INT0IF<sp/>=<sp/>0;<sp/><sp/><sp/><sp/>//Reset<sp/>INT0<sp/>interrupt<sp/>flag</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IEC0bits.INT0IE<sp/>=<sp/>1;<sp/><sp/><sp/><sp/>//Enable<sp/>INT0<sp/>Interrupt<sp/>Service<sp/>Routine</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFS1bits.INT1IF<sp/>=<sp/>0;<sp/><sp/><sp/><sp/>//Reset<sp/>INT1<sp/>interrupt<sp/>flag</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IEC1bits.INT1IE<sp/>=<sp/>1;<sp/><sp/><sp/><sp/>//Enable<sp/>INT1<sp/>Interrupt<sp/>Service<sp/>Routine</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>up<sp/>port<sp/>pins<sp/>RB0<sp/>and<sp/>RB1<sp/>to<sp/>drive<sp/>the<sp/>LEDs,<sp/>D3<sp/>and<sp/>D4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//RB0<sp/>connected<sp/>to<sp/>D3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//RB1<sp/>connected<sp/>to<sp/>D4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LATBbits.LATB0<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>Latch<sp/>bit<sp/>for<sp/>RB0<sp/>port<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRISBbits.TRISB0<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>RB0<sp/>pin<sp/>direction<sp/>to<sp/>be<sp/>an<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LATBbits.LATB1<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Clear<sp/>Latch<sp/>bit<sp/>for<sp/>RB1<sp/>port<sp/>pin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TRISBbits.TRISB1<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>RB1<sp/>pin<sp/>direction<sp/>to<sp/>be<sp/>an<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//_INT0Interrupt()<sp/>is<sp/>the<sp/>INT0<sp/>interrupt<sp/>service<sp/>routine<sp/>(ISR).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//The<sp/>routine<sp/>must<sp/>have<sp/>global<sp/>scope<sp/>in<sp/>order<sp/>to<sp/>be<sp/>an<sp/>ISR.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//The<sp/>ISR<sp/>name<sp/>is<sp/>chosen<sp/>from<sp/>the<sp/>device<sp/>linker<sp/>script.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//On<sp/>every<sp/>INT0<sp/>interrupt<sp/>event,<sp/>the<sp/>rate<sp/>at<sp/>which<sp/>the<sp/>LEDs<sp/>blink<sp/>is<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//by<sp/>varying<sp/>the<sp/>prescaler<sp/>on<sp/>Timer1<sp/>between<sp/>the<sp/>states<sp/>1:1,<sp/>1:8,<sp/>1:64<sp/>&amp;<sp/>1:256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="73"><highlight class="comment">void<sp/>__attribute__((__interrupt__,<sp/>__no_auto_psv__))<sp/>_INT0Interrupt(void)</highlight></codeline>
<codeline lineno="74"><highlight class="comment">{</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(Switch_S5<sp/>==<sp/>1);<sp/>//Wait<sp/>in<sp/>ISR<sp/>until<sp/>Switch<sp/>S5<sp/>is<sp/>released</highlight></codeline>
<codeline lineno="76"><highlight class="comment"></highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Change<sp/>Timer1<sp/>Prescaler<sp/>to<sp/>next<sp/>value</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//in<sp/>the<sp/>sequence<sp/>1:1,<sp/>1:8,<sp/>1:64,<sp/>1:256</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(T1CONbits.TCKPS<sp/>==<sp/>3)<sp/>T1CONbits.TCKPS<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>T1CONbits.TCKPS<sp/>+=1;</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFS0bits.INT0IF<sp/>=<sp/>0;<sp/><sp/><sp/><sp/>//Clear<sp/>the<sp/>INT0<sp/>interrupt<sp/>flag<sp/>or<sp/>else</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//the<sp/>CPU<sp/>will<sp/>keep<sp/>vectoring<sp/>back<sp/>to<sp/>the<sp/>ISR</highlight></codeline>
<codeline lineno="84"><highlight class="comment">}</highlight></codeline>
<codeline lineno="85"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="87"><highlight class="comment">//_INT1Interrupt()<sp/>is<sp/>the<sp/>INT1<sp/>interrupt<sp/>service<sp/>routine<sp/>(ISR).</highlight></codeline>
<codeline lineno="88"><highlight class="comment">//The<sp/>routine<sp/>must<sp/>have<sp/>global<sp/>scope<sp/>in<sp/>order<sp/>to<sp/>be<sp/>an<sp/>ISR.</highlight></codeline>
<codeline lineno="89"><highlight class="comment">//The<sp/>ISR<sp/>name<sp/>is<sp/>chosen<sp/>from<sp/>the<sp/>device<sp/>linker<sp/>script.</highlight></codeline>
<codeline lineno="90"><highlight class="comment">//On<sp/>every<sp/>other<sp/>INT1<sp/>interrupt<sp/>event,<sp/>the<sp/>state<sp/>of<sp/>LED<sp/>D3<sp/>is<sp/>flipped<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="91"><highlight class="comment">//the<sp/>two<sp/>LEDs<sp/>are<sp/>NOT<sp/>ON<sp/>simultaneously.<sp/>On<sp/>every<sp/>other<sp/>INT1<sp/>interrupt<sp/>event,</highlight></codeline>
<codeline lineno="92"><highlight class="comment">//the<sp/>state<sp/>of<sp/>LED<sp/>D3<sp/>is<sp/>flipped<sp/>back<sp/>so<sp/>that<sp/>the<sp/>two<sp/>LEDs<sp/>are<sp/>ON<sp/>simultaneously.</highlight></codeline>
<codeline lineno="93"><highlight class="comment">void<sp/>__attribute__((__interrupt__,<sp/>__no_auto_psv__))<sp/>_INT1Interrupt(void)</highlight></codeline>
<codeline lineno="94"><highlight class="comment">{</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(Switch_S6<sp/>==<sp/>1);<sp/>//Wait<sp/>in<sp/>ISR<sp/>until<sp/>Switch<sp/>S5<sp/>is<sp/>released</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LATBbits.LATB0<sp/>=~<sp/>LATBbits.LATB0;<sp/>//Toggle<sp/>LED<sp/>D3</highlight></codeline>
<codeline lineno="97"><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IFS1bits.INT1IF<sp/>=<sp/>0;<sp/><sp/><sp/><sp/>//Clear<sp/>the<sp/>INT0<sp/>interrupt<sp/>flag<sp/>or<sp/>else</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//the<sp/>CPU<sp/>will<sp/>keep<sp/>vectoring<sp/>back<sp/>to<sp/>the<sp/>ISR</highlight></codeline>
<codeline lineno="100"><highlight class="comment">}</highlight></codeline>
<codeline lineno="101"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/thomas/Programmation/utcoupe/2011/utcoupe-mega/asserv2010/INTx_IO_pins.c"/>
  </compounddef>
</doxygen>
