-------------------------------------------------------------------------
|																		|
|								PROTOCOLE								|
|																		|
-------------------------------------------------------------------------




SERVER PYTHON
	- message envoyé
		Le message est composé d'un id, d'une commande et de ses éventuels
		paramètres, séparés par le caractère ":".
		ex :
			42:0
			58:1
			67:2:500:678

	- message reçu
		Le message est composé de d'un id et de la réponse séparés par le
		caractère "|".
		Si la réponse contient plusieurs sous infos, elles seront séparées
		par le caractère "/", si il y a besoin de sous infos, "_".
		Si la réponse doit contenir des retour à la ligne, il faudra
		utiliser la caractère '$' et non la caractère de retour à la ligne
		classique.
		ex :
			42|asserv
			58|Pong
			67|1
			444|350/700/90 (parsage -> [350,700,90])
			567|1_456_567/0_42_42 (parsage -> [[1,456,567], [0,42,42]])





COMMANDES : CARTE ASSERV
	0 (identification) 		--> 'asserv'
	1 (Ping)				--> 'Pong'
	2 x y (Goal en Absolu)	--> '1'		--> '1' ou '0' (1: but atteind, 0: annulation) suivi de x y a
	3 x y (Goal en relatif)	-->	'1'		--> '1' ou '0' (1: but atteind, 0: annulation) suivi de x y a
	4 a (Angle en Absolu)	--> '1'		--> '1' ou '0' (1: but atteind, 0: annulation) suivi de x y a
	5 a (Angle en relatif)	--> '1'		--> '1' ou '0' (1: but atteind, 0: annulation) suivi de x y a
	6 (position)			--> 'x y a'
	7 (recalage)			--> '1'		--> '1' ou '0' (1: but atteind, 0: annulation) suivi de x y a


COMMANDES : CARTE AUTRE,
	0 (identification) 		--> 'autre'
	1 (Ping)				--> 'Pong'
	12 n (retour sharp n)	--> 'valeur du sharp n'
	13 n s (surveiller que
		le sharp n ne dépasse
		le seuil s)			--> '1' (recu)	--> '1' ou '0' (1: seuil dépassé, 0: surveillance arretée)
	14 n p (pince n
			position p)		--> '1' (recu)	--> '1' ou '0' (fini ou échouer)
	15 n p (moteur pas à pas
			n numéro
			p nb de pas)	--> '1' (recu)	--> '1'


COMMANDES : CAMERA
	0 (identification) 		--> 'autre'
	1 (Ping)				--> 'Pong'
	2 (back cam)			--> ' ,r' ou ' ,t x y;t x y'
	3 (front cam)			--> ' ,r' ou ' ,t x y;t x y'
	4 (both cam)			--> ' ,r' ou ' ,t x y;t x y'


SERVER PYTHON
	id_carte commande 		(envoyer à la carte <id_carte> la <commande> ex: asserv G 1500 1000)
	loop time -> commande 	(lancer en boucle avec un interval <time> la <commande> suivante)
	test commande 			(lancer 300 fois de suite la <commande>, puis afficher le temps moyen)
	stop n 					(ferme le nième écran)
	exit 					(quitter l'application)
